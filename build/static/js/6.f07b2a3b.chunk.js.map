{"version":3,"sources":["utility/hooks/useSkin.js","@core/layouts/components/layout-wrapper/index.js","router/routes/index.js","@core/layouts/BlankLayout.js","utility/Utils.js","@core/components/customizer/index.js","@core/components/scrolltop/index.js","@core/layouts/components/footer/index.js","@core/components/avatar/index.js","assets/images/portrait/small/avatar-s-11.jpg","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","utility/context/Can.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","navigation/vertical/index.js","layouts/VerticalLayout.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","navigation/horizontal/index.js","layouts/HorizontalLayout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js"],"names":["useSkin","dispatch","useDispatch","store","useSelector","state","layout","useEffect","_element$classList","element","window","document","body","classList","remove","apply","_toConsumableArray","skin","add","dark","bordered","setSkin","type","handleSkin","LayoutWrapper","props","_classnames","children","appLayout","wrapperClass","transition","routeMeta","navbarStore","navbar","contentWidth","Tag","Fragment","handleContentWidth","menuCollapsed","handleMenuCollapsed","menuHidden","handleMenuHidden","_jsxs","className","classnames","_defineProperty","query","length","_jsx","concat","_objectSpread","Routes","path","component","lazy","meta","authRoute","BlankLayout","_ref","_useState","useState","_useState2","_slicedToArray","isMounted","setIsMounted","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30","Customizer","isRtl","setIsRtl","isHidden","setLayout","navbarType","footerType","navbarColor","setIsHidden","setLastLayout","setTransition","setNavbarType","setFooterType","setNavbarColor","setContentWidth","setMenuCollapsed","openCustomizer","setOpenCustomizer","handleToggle","e","preventDefault","transitionOptions","value","label","transitionValue","find","i","open","href","onClick","Settings","size","PerfectScrollbar","options","wheelPropagation","X","skinsArr","name","checked","map","radio","index","marginCondition","Input","id","onChange","Label","for","renderSkinsRadio","Select","classNamePrefix","defaultValue","isClearable","color","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","ScrollTop","showOffset","scrollBehaviour","rest","_objectWithoutProperties","_excluded","visible","setVisible","addEventListener","pageYOffset","scroll","top","behavior","defaultProps","Footer","Date","getFullYear","target","rel","Heart","Avatar","forwardRef","ref","_classnames3","img","icon","status","badgeUp","content","tag","initials","imgWidth","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","undefined","style","str","results","split","forEach","push","join","getInitials","Badge","pill","src","alt","height","width","UserDropdown","userData","userAvatar","avatar","defaultAvatar","UncontrolledDropdown","DropdownToggle","role","DropdownMenu","end","DropdownItem","User","Mail","CheckSquare","MessageSquare","divider","CreditCard","HelpCircle","Link","to","Power","NavbarUser","ThemeToggler","Sun","Moon","NavItem","NavLink","ThemeNavbar","setMenuVisibility","Menu","VerticalMenuHeader","setGroupOpen","menuHover","Toggler","Circle","Disc","themeConfig","app","appLogoImage","appName","VerticalNavMenuLink","item","activeItem","setActiveItem","currentActiveItem","LinkTag","externalLink","location","useLocation","disabled","active","navLink","newTab","isActive","match","url","title","badge","AbilityContext","createContext","hasActiveChild","createContextualCan","Consumer","currentUrl","_step","_iterator","_createForOfIteratorHelper","s","n","done","child","includes","err","f","removeChildren","openGroup","currentActiveGroup","indexOf","splice","VerticalNavMenuGroup","groupOpen","parentItem","routerProps","groupActive","setGroupActive","setCurrentActiveGroup","currentURL","pathname","onCollapseClick","parent","activeGroup","toggleOpenGroup","Collapse","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","MoreHorizontal","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","Sidebar","menu","menuData","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","onScrollY","container","scrollTop","current","contains","scrollMenu","useRTL","isRTL","getElementsByTagName","setAttribute","handleRTL","useNavbarType","handleNavbarType","useFooterType","handleFooterType","useNavbarColor","handleNavbarColor","VerticalLayout","footer","_useRTL","_useRTL2","_useSkin","_useNavbarType","_useFooterType","_useNavbarColor","menuVisibility","innerWidth","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","val","footerClasses","static","sticky","hidden","navbarClasses","floating","bgColorCondition","SidebarComponent","Navbar","expand","light","NavbarComponent","show","customizer","FooterComponent","ScrollToTop","Button","ArrowUp","Eye","Clock","Columns","Layout","navigation","HorizontalNavMenuLink","isChild","setOpenDropdown","HorizontalNavMenuGroup","submenu","openDropdown","menuModifiers","enabled","phase","fn","data","stylesObj","pageHeight","innerHeight","popperEl","elements","popper","ddTop","getBoundingClientRect","clientHeight","maxHeight","overflowY","ddRef","left","closest","styles","Dropdown","toggle","modifiers","HorizontalNavMenuItems","HorizontalMenu","arr","HorizontalLayout","navbarScrolled","setNavbarScrolled","MenuComponent","Home","Router","_useLayout","handleLayout","breakpoint","lastLayout","handleLastLayout","useLayout","_useRouterTransition","routerTransition","handleRouterTransition","useRouterTransition","DefaultLayout","Layouts","NotAuthorized","Error","AppRouter","basename","process","Switch","Route","exact","render","Redirect","Object","keys","LayoutTag","_LayoutRoutesAndPaths","LayoutRoutes","LayoutPaths","filter","route","LayoutRoutesAndPaths","assign","Suspense","fallback","App"],"mappings":"uNAOaA,EAAU,WAErB,IAAMC,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM,IA0B/C,OApBAC,qBAAU,WAAO,IAADC,EAERC,EAAUC,OAAOC,SAASC,MAUhCJ,EAAAC,EAAQI,WAAUC,OAAMC,MAAAP,EAAAQ,YAAIP,EAAQI,YAGjB,UAAfV,EAAMc,MACRR,EAAQI,UAAUK,IAXD,CACjBC,KAAM,cACNC,SAAU,kBACV,YAAa,oBAQoBjB,EAAMc,MAE3C,GAAG,CAACd,EAAMc,OAEH,CAAEA,KAAMd,EAAMc,KAAMI,QAxBX,SAAAC,GACdrB,EAASsB,YAAWD,GACtB,EAuBF,C,4MCoDeE,EA5EO,SAAAC,GAAU,IAADC,EAErBpB,EAAqEmB,EAArEnB,OAAQqB,EAA6DF,EAA7DE,SAAUC,EAAmDH,EAAnDG,UAAWC,EAAwCJ,EAAxCI,aAAcC,EAA0BL,EAA1BK,WAAYC,EAAcN,EAAdM,UAGzD9B,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,CAAK,IAElC2B,EAAc7B,EAAM8B,OACpBC,EAAe/B,EAAMG,OAAO4B,aAG5BC,EAAiB,qBAAX7B,GAAkCsB,EAAoBQ,WAAR,MAiC1D,OAfA7B,qBAAU,WAYR,OAXIwB,IACEA,EAAUG,cACZjC,EAASoC,YAAmBN,EAAUG,eAEpCH,EAAUO,eACZrC,EAASsC,YAAoBR,EAAUO,gBAErCP,EAAUS,YACZvC,EAASwC,YAAiBV,EAAUS,cAGjC,WA1BHT,IACEA,EAAUG,cACZjC,EAASoC,YAAmB,SAE1BN,EAAUO,eACZrC,EAASsC,aAAqBR,EAAUO,gBAEtCP,EAAUS,YACZvC,EAASwC,aAAkBV,EAAUS,aAkBnB,CACxB,GAAG,IAGDE,eAAA,OACEC,UAAWC,IAAW,uCAAqClB,EAAA,GAAAmB,YAAAnB,EACxDG,EAAeA,GAAYgB,YAAAnB,EAC5B,eAAgBM,EAAYc,MAAMC,QAAMrB,IACvCC,SAAA,CAEHqB,cAAA,OAAKL,UAAU,oBACfK,cAAA,OAAKL,UAAU,yBACfK,cAAA,OACEL,UAAWC,IAAUC,YAAC,CACpB,mBAAoBjB,EACpB,uBAAwBA,EACxB,oBAAsC,UAAjBM,GAAwB,8BAAAe,OACdnB,GAA8B,SAAfA,GAAyBA,EAAWiB,SACjFpB,SAEHqB,cAACb,EACCe,wBAAA,GACgB,qBAAX5C,GAAkCsB,EAEnC,CAAC,EADD,CAAEe,UAAWC,IAAW,CAAE,gBAAiBhB,MACzC,IAAAD,SAGLA,SAKX,E,gBC9EMwB,EAAS,CACb,CACEC,KAAM,QACNC,UAAWC,gBAAK,kBAAM,6BAA0B,KAElD,CACEF,KAAM,eACNC,UAAWC,gBAAK,kBAAM,8BAAgC,KAExD,CACEF,KAAM,SACNC,UAAWC,gBAAK,kBAAM,mDAA2B,IACjDhD,OAAQ,cACRiD,KAAM,CACJC,WAAW,IAGf,CACEJ,KAAM,SACNC,UAAWC,gBAAK,kBAAM,mDAA2B,IACjDhD,OAAQ,gB,iBCWGmD,EA/BK,SAAHC,GAAsB,IAAhB/B,EAAQ+B,EAAR/B,SAErBgC,EAAkCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAGtB5C,EAASjB,cAATiB,KAOR,OALAV,qBAAU,WAER,OADAyD,GAAa,GACN,kBAAMA,GAAa,EAAM,CAClC,GAAG,IAEED,EAKHf,cAAA,OACEL,UAAWC,IAAW,aAAc,CAClC,cAAwB,SAAT3B,IACdU,SAEHqB,cAAA,OAAKL,UAAU,sBAAqBhB,SAClCqB,cAAA,OAAKL,UAAU,kBAAiBhB,SAC9BqB,cAAA,OAAKL,UAAU,eAAchB,SAAEA,UAX9B,IAgBX,E,iCC8BasC,EAAoB,SAAAC,GAAK,OAAAhB,wBAAA,GACjCgB,GAAK,IACRC,OAAMjB,wBAAA,GACDgB,EAAMC,QAAM,IACfC,UAAW,YACXC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,UAAW,aACZ,E,oCC0SYC,G,OAvWI,SAAAhD,GAEjB,IACER,EAqBEQ,EArBFR,KACAyD,EAoBEjD,EApBFiD,MACApE,EAmBEmB,EAnBFnB,OACAe,EAkBEI,EAlBFJ,QACAsD,EAiBElD,EAjBFkD,SACAC,EAgBEnD,EAhBFmD,SACAC,EAeEpD,EAfFoD,UACAC,EAcErD,EAdFqD,WACAC,EAaEtD,EAbFsD,WACAjD,EAYEL,EAZFK,WACAkD,EAWEvD,EAXFuD,YACAC,EAUExD,EAVFwD,YACA/C,EASET,EATFS,aACAI,EAQEb,EARFa,cACA4C,EAOEzD,EAPFyD,cACAC,EAME1D,EANF0D,cACAC,EAKE3D,EALF2D,cACAC,EAIE5D,EAJF4D,cACAC,EAGE7D,EAHF6D,eACAC,EAEE9D,EAFF8D,gBACAC,EACE/D,EADF+D,iBAIF7B,EAA4CC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAApD8B,EAAc5B,EAAA,GAAE6B,EAAiB7B,EAAA,GAGlC8B,EAAe,SAAAC,GACnBA,EAAEC,iBACFH,GAAmBD,EACrB,EAgJMK,EAAoB,CACxB,CAAEC,MAAO,SAAUC,MAAO,QAC1B,CAAED,MAAO,aAAcC,MAAO,gBAC9B,CAAED,MAAO,SAAUC,MAAO,WAC1B,CAAED,MAAO,OAAQC,MAAO,SAIpBC,EAAkBH,EAAkBI,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,QAAUjE,CAAU,IAE1E,OACEY,eAAA,OACEC,UAAWC,IAAW,+BAAgC,CACpDwD,KAAMX,IACL9D,SAAA,CAEHqB,cAAA,KAAGqD,KAAK,IAAI1D,UAAU,qEAAqE2D,QAASX,EAAahE,SAC/GqB,cAACuD,IAAQ,CAACC,KAAM,GAAI7D,UAAU,cAEhCD,eAAC+D,IAAgB,CAAC9D,UAAU,qBAAqB+D,QAAS,CAAEC,kBAAkB,GAAQhF,SAAA,CACpFe,eAAA,OAAKC,UAAU,qDAAoDhB,SAAA,CACjEqB,cAAA,MAAIL,UAAU,OAAMhB,SAAC,qBACrBqB,cAAA,KAAGL,UAAU,MAAKhB,SAAC,qCACnBqB,cAAA,KAAGqD,KAAK,IAAI1D,UAAU,mBAAmB2D,QAASX,EAAahE,SAC7DqB,cAAC4D,IAAC,SAIN5D,cAAA,SAEAN,eAAA,OAAKC,UAAU,OAAMhB,SAAA,CACnBe,eAAA,OAAKC,UAAU,OAAMhB,SAAA,CACnBqB,cAAA,KAAGL,UAAU,UAAShB,SAAC,SACvBqB,cAAA,OAAKL,UAAU,SAAQhB,SA9KR,WACvB,IAAMkF,EAAW,CACf,CACEC,KAAM,QACNd,MAAO,QACPe,QAAkB,UAAT9F,GAEX,CACE6F,KAAM,WACNd,MAAO,WACPe,QAAkB,aAAT9F,GAEX,CACE6F,KAAM,OACNd,MAAO,OACPe,QAAkB,SAAT9F,GAEX,CACE6F,KAAM,YACNd,MAAO,YACPe,QAAkB,cAAT9F,IAIb,OAAO4F,EAASG,KAAI,SAACC,EAAOC,GAC1B,IAAMC,EAAkBD,IAAUL,EAAS9D,OAAS,EAEpD,MAAe,qBAAXzC,GAAgD,cAAf2G,EAAMH,KAClC,KAIPpE,eAAA,OAAiBC,UAAWC,IAAW,aAAc,CAAE,YAAauE,IAAmBxF,SAAA,CACrFqB,cAACoE,IAAK,CAAC9F,KAAK,QAAQ+F,GAAIJ,EAAMH,KAAMC,QAASE,EAAMF,QAASO,SAAU,kBAAMjG,EAAQ4F,EAAMH,KAAK,IAC/F9D,cAACuE,IAAK,CAAC5E,UAAU,mBAAmB6E,IAAKP,EAAMH,KAAKnF,SACjDsF,EAAMjB,UAHDkB,EAOd,GACF,CAsImCO,QAG3B/E,eAAA,OAAKC,UAAU,OAAMhB,SAAA,CACnBqB,cAAA,KAAGL,UAAU,UAAShB,SAAC,kBACvBe,eAAA,OAAKC,UAAU,SAAQhB,SAAA,CACrBe,eAAA,OAAKC,UAAU,kBAAiBhB,SAAA,CAC9BqB,cAACoE,IAAK,CACJ9F,KAAK,QACL+F,GAAG,aACHN,QAA0B,SAAjB7E,EACToF,SAAU,kBAAM/B,EAAgB,OAAO,IAEzCvC,cAACuE,IAAK,CAAC5E,UAAU,mBAAmB6E,IAAI,aAAY7F,SAAC,kBAIvDe,eAAA,OAAKC,UAAU,aAAYhB,SAAA,CACzBqB,cAACoE,IAAK,CACJC,GAAG,QACH/F,KAAK,QACLyF,QAA0B,UAAjB7E,EACToF,SAAU,kBAAM/B,EAAgB,QAAQ,IAE1CvC,cAACuE,IAAK,CAAC5E,UAAU,mBAAmB6E,IAAI,QAAO7F,SAAC,mBAOtDqB,cAAA,OAAKL,UAAU,wBAAuBhB,SACpCe,eAAA,OAAKC,UAAU,SAAQhB,SAAA,CACrBqB,cAAA,KAAGL,UAAU,uBAAsBhB,SAAC,QACpCqB,cAACoE,IAAK,CAAC9F,KAAK,SAAS+F,GAAG,MAAMP,KAAK,MAAMC,QAASrC,EAAO4C,SAAU,kBAAM3C,GAAUD,EAAM,SAI7F1B,cAAA,OAAKL,UAAU,OAAMhB,SACnBe,eAAA,OAAKC,UAAU,oDAAmDhB,SAAA,CAChEqB,cAAA,KAAGL,UAAU,eAAchB,SAAC,sBAC5BqB,cAAC0E,IAAM,CACLxD,MAAOD,EACPtB,UAAU,eACVgF,gBAAgB,SAChBC,aAAc9B,EAAkB,GAChCC,MAAOE,EACPS,QAASZ,EACT+B,aAAa,EACbP,SAAU,SAAA5D,GAAA,IAAGqC,EAAKrC,EAALqC,MAAK,OAAOZ,EAAcY,EAAM,YAMrD/C,cAAA,SAEAN,eAAA,OAAKC,UAAU,OAAMhB,SAAA,CACnBqB,cAAA,KAAGL,UAAU,UAAShB,SAAC,gBACvBqB,cAAA,OAAKL,UAAU,OAAMhB,SACnBe,eAAA,OAAKC,UAAU,4BAA2BhB,SAAA,CACxCe,eAAA,OAAKC,UAAU,kBAAiBhB,SAAA,CAC9BqB,cAACoE,IAAK,CACJ9F,KAAK,QACL+F,GAAG,kBACHN,QAAoB,mBAAXzG,EACTgH,SAAU,WACRzC,EAAU,YACVK,EAAc,WAChB,IAEFlC,cAACuE,IAAK,CAAC5E,UAAU,mBAAmB6E,IAAI,kBAAiB7F,SAAC,gBAI5De,eAAA,OAAKC,UAAU,aAAYhB,SAAA,CACzBqB,cAACoE,IAAK,CACJ9F,KAAK,QACL+F,GAAG,oBACHN,QAAoB,qBAAXzG,EACTgH,SAAU,WACRzC,EAAU,cACVK,EAAc,aAChB,IAEFlC,cAACuE,IAAK,CAAC5E,UAAU,mBAAmB6E,IAAI,oBAAmB7F,SAAC,uBAMtD,qBAAXrB,EACC0C,cAAA,OAAKL,UAAU,wBAAuBhB,SACpCe,eAAA,OAAKC,UAAU,4BAA2BhB,SAAA,CACxCqB,cAAA,KAAGL,UAAU,uBAAsBhB,SAAC,mBACpCqB,cAACoE,IAAK,CACJ9F,KAAK,SACL+F,GAAG,iBACHP,KAAK,iBACLC,QAASzE,EACTgF,SAAU,kBAAM9B,GAAkBlD,EAAc,SAIpD,KAEJU,cAAA,OAAKL,UAAU,wBAAuBhB,SACpCe,eAAA,OAAKC,UAAU,4BAA2BhB,SAAA,CACxCqB,cAAA,KAAGL,UAAU,uBAAsBhB,SAAC,gBACpCqB,cAACoE,IAAK,CACJ9F,KAAK,SACL+F,GAAG,cACHP,KAAK,cACLC,QAASnC,EACT0C,SAAU,kBAAMrC,GAAaL,EAAS,YAM9C5B,cAAA,SAEAN,eAAA,OAAKC,UAAU,OAAMhB,SAAA,CACP,qBAAXrB,EACCoC,eAAA,OAAKC,UAAU,OAAMhB,SAAA,CACnBqB,cAAA,KAAGL,UAAU,UAAShB,SAAC,iBACvBqB,cAAA,MAAIL,UAAU,4BAA2BhB,SAhQjC,CAAC,QAAS,UAAW,YAAa,UAAW,SAAU,OAAQ,UAAW,QAE3EqF,KAAI,SAAAc,GAAK,OACxB9E,cAAA,MAEEL,UAAWC,IAAW,gBAADK,OAAiB6E,GAAS,CAC7CC,SAAU/C,IAAgB8C,EAC1BE,OAAkB,UAAVF,IAEVxB,QAAS,kBAAMhB,EAAewC,EAAM,GAL/BA,EAMD,SAwPE,KAEJpF,eAAA,OAAKC,UAAU,OAAMhB,SAAA,CACnBe,eAAA,KAAGC,UAAU,UAAShB,SAAA,CAAa,qBAAXrB,EAAgC,OAAS,SAAS,WAC1E0C,cAAA,OAAKL,UAAU,SAAQhB,SAvPH,WAC5B,IAAMsG,EAAgB,CACpB,CACEnB,KAAM,WACNd,MAAO,WACPe,QAAwB,aAAfjC,GAEX,CACEgC,KAAM,SACNd,MAAO,SACPe,QAAwB,WAAfjC,GAEX,CACEgC,KAAM,SACNd,MAAO,SACPe,QAAwB,WAAfjC,GAEX,CACEgC,KAAM,SACNd,MAAO,SACPe,QAAwB,WAAfjC,IAIb,OAAOmD,EAAcjB,KAAI,SAACC,EAAOC,GAC/B,IAAMC,EAAkBD,IAAUe,EAAclF,OAAS,EAEzD,MAAe,qBAAXzC,GAAgD,WAAf2G,EAAMH,KAClC,KAIPpE,eAAA,OAAiBC,UAAWC,IAAW,aAAc,CAAE,YAAauE,IAAmBxF,SAAA,CACrFqB,cAACoE,IAAK,CAAC9F,KAAK,QAAQ+F,GAAIJ,EAAMH,KAAMC,QAASE,EAAMF,QAASO,SAAU,kBAAMlC,EAAc6B,EAAMH,KAAK,IACrG9D,cAACuE,IAAK,CAAC5E,UAAU,mBAAmB6E,IAAKP,EAAMH,KAAKnF,SACjDsF,EAAMjB,UAHDkB,EAOd,GACF,CA+MmCgB,WAI7BlF,cAAA,SAEAA,cAAA,OAAKL,UAAU,OAAMhB,SACnBe,eAAA,OAAKC,UAAU,OAAMhB,SAAA,CACnBqB,cAAA,KAAGL,UAAU,UAAShB,SAAC,gBACvBqB,cAAA,OAAKL,UAAU,SAAQhB,SArNH,WAC5B,IAAMwG,EAAgB,CACpB,CACErB,KAAM,SACNd,MAAO,SACPe,QAAwB,WAAfhC,GAEX,CACE+B,KAAM,SACNd,MAAO,SACPe,QAAwB,WAAfhC,GAEX,CACE+B,KAAM,SACNd,MAAO,SACPe,QAAwB,WAAfhC,IAIb,OAAOoD,EAAcnB,KAAI,SAACC,EAAOC,GAC/B,IAAMC,EAAkBD,IAAUiB,EAAcpF,OAAS,EAEzD,OACEL,eAAA,OAAiBC,UAAWC,IAAW,aAAc,CAAE,YAAauE,IAAmBxF,SAAA,CACrFqB,cAACoE,IAAK,CACJ9F,KAAK,QACLyF,QAASE,EAAMF,QACfM,GAAE,UAAApE,OAAYgE,EAAMH,MACpBQ,SAAU,kBAAMjC,EAAc4B,EAAMH,KAAK,IAE3C9D,cAACuE,IAAK,CAAC5E,UAAU,mBAAmB6E,IAAG,UAAAvE,OAAYgE,EAAMH,MAAOnF,SAC7DsF,EAAMjB,UARDkB,EAYd,GACF,CAiLmCkB,eAMrC,G,sDC/WMC,EAAY,SAAA5G,GAEhB,IAAQ6G,EAAmD7G,EAAnD6G,WAAYC,EAAuC9G,EAAvC8G,gBAAiB5G,EAAsBF,EAAtBE,SAAa6G,EAAIC,YAAKhH,EAAKiH,GAGhE/E,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCgF,EAAO9E,EAAA,GAAE+E,EAAU/E,EAAA,GAE1BtD,qBAAU,WACJG,QACFA,OAAOmI,iBAAiB,UAAU,WAC5BnI,OAAOoI,aAAeR,EACxBM,GAAW,GAEXA,GAAW,EAEf,GAEJ,GAAG,IAMH,OACED,GACE3F,cAAA,MAAAE,wBAAA,CAAKP,UAAU,gBAAgB2D,QANT,WACxB5F,OAAOqI,OAAO,CAAEC,IAAK,EAAGC,SAAUV,GACpC,GAImEC,GAAI,IAAA7G,SAChEA,IAIT,EAEe0G,IASfA,EAAUa,aAAe,CACvBX,gBAAiB,U,aC3BJY,EAlBA,WACb,OACEzG,eAAA,KAAGC,UAAU,gBAAehB,SAAA,CAC1Be,eAAA,QAAMC,UAAU,iDAAgDhB,SAAA,CAAC,mBAClD,IAAIyH,MAAOC,cAAe,IACvCrG,cAAA,KAAGqD,KAAK,8CAA8CiD,OAAO,SAASC,IAAI,sBAAqB5H,SAAC,cAGhGqB,cAAA,QAAML,UAAU,2BAA0BhB,SAAC,6BAE7Ce,eAAA,QAAMC,UAAU,iCAAgChB,SAAA,CAAC,2BAE/CqB,cAACwG,IAAK,CAAChD,KAAM,UAIrB,E,yKCTMiD,EAASC,sBAAW,SAACjI,EAAOkI,GAAS,IAADjI,EAAAkI,EAGtCC,EAiBEpI,EAjBFoI,IACArD,EAgBE/E,EAhBF+E,KACAsD,EAeErI,EAfFqI,KACAhC,EAcErG,EAdFqG,MACAiC,EAaEtI,EAbFsI,OACAC,EAYEvI,EAZFuI,QACAC,EAWExI,EAXFwI,QACK9H,EAUHV,EAVFyI,IACAC,EASE1I,EATF0I,SACAC,EAQE3I,EARF2I,SACAzH,EAOElB,EAPFkB,UACA0H,EAME5I,EANF4I,UACAC,EAKE7I,EALF6I,UACAC,EAIE9I,EAJF8I,WACAC,EAGE/I,EAHF+I,aACAC,EAEEhJ,EAFFgJ,cACGjC,EAAIC,YACLhH,EAAKiH,GAYT,OACEhG,eAACP,EAAGe,wBAAA,CACFP,UAAWC,IAAW,UAAQlB,EAAA,GAAAmB,YAAAnB,EAC3BiB,EAAYA,GAASE,YAAAnB,EAAC,MAADuB,OACf6E,GAAUA,GAAKjF,YAAAnB,EAAC,UAADuB,OACXuD,GAASA,GAAI9E,IAE1BiI,IAAKA,GACDnB,GAAI,IAAA7G,SAAA,EAEC,IAARkI,QAAyBa,IAARb,EAChBnH,eAAA,QACEC,UAAWC,IAAW,iBAAkB,CACtC,oBAAqBoH,IAEvBW,MAAOF,EAAc9I,SAAA,CAEpBwI,EA1BW,SAAAS,GAClB,IAAMC,EAAU,GAKhB,OAJkBD,EAAIE,MAAM,KAClBC,SAAQ,SAAAnF,GAChBiF,EAAQG,KAAKpF,EAAE,GACjB,IACOiF,EAAQI,KAAK,GACtB,CAmBoBC,CAAYjB,GAAWA,EAElCH,GAAc,KACdE,EACChH,cAACmI,IAAK,CAACrD,MAAOyC,GAA0B,UAAW5H,UAAU,oBAAoByI,MAAI,EAAAzJ,SAClF0I,GAAwB,MAEzB,QAGNrH,cAAA,OACEL,UAAWC,IAAUC,YAAC,CAAC,EACpB2H,EAAeA,IAElBa,IAAKxB,EACLyB,IAAI,YACJC,OAAQjB,IAAc9D,EAAO8D,EAAY,GACzCkB,MAAOpB,IAAa5D,EAAO4D,EAAW,KAGzCL,EACC/G,cAAA,QACEL,UAAWC,KAAUgH,EAAA,GAAA/G,YAAA+G,EAAA,iBAAA3G,OACD8G,GAAWA,GAAMlH,YAAA+G,EAAC,iBAAD3G,OACjBuD,GAASA,GAAIoD,MAGjC,QAGV,IAEeH,IA+DfA,EAAOP,aAAe,CACpBgB,IAAK,O,mEC3JQ,MAA0B,wCCiF1BuB,EA9DM,WAEnB,IAAA9H,EAAmBC,mBAAS,MAArB8H,EAA0B5H,YAAAH,EAAA,GAAlB,GAUTgI,EAAcD,GAAYA,EAASE,QAAWC,EAEpD,OACEnJ,eAACoJ,IAAoB,CAAC5B,IAAI,KAAKvH,UAAU,yBAAwBhB,SAAA,CAC/De,eAACqJ,IAAc,CAAC1F,KAAK,IAAI6D,IAAI,IAAIvH,UAAU,8BAA8B2D,QAAS,SAAAV,GAAC,OAAIA,EAAEC,gBAAgB,EAAClE,SAAA,CACxGe,eAAA,OAAKC,UAAU,4BAA2BhB,SAAA,CACxCqB,cAAA,QAAML,UAAU,oBAAmBhB,SAAG+J,GAAYA,EAAmB,UAAM,aAC3E1I,cAAA,QAAML,UAAU,cAAahB,SAAG+J,GAAYA,EAASM,MAAS,aAEhEhJ,cAACyG,EAAM,CAACI,IAAK8B,EAAYrB,UAAU,KAAKF,SAAS,KAAKL,OAAO,cAE/DrH,eAACuJ,IAAY,CAACC,KAAG,EAAAvK,SAAA,CACfe,eAACyJ,IAAY,CAACjC,IAAI,IAAI7D,KAAK,iBAAiBC,QAAS,SAAAV,GAAC,OAAIA,EAAEC,gBAAgB,EAAClE,SAAA,CAC3EqB,cAACoJ,IAAI,CAAC5F,KAAM,GAAI7D,UAAU,UAC1BK,cAAA,QAAML,UAAU,eAAchB,SAAC,eAEjCe,eAACyJ,IAAY,CAACjC,IAAI,IAAI7D,KAAK,cAAcC,QAAS,SAAAV,GAAC,OAAIA,EAAEC,gBAAgB,EAAClE,SAAA,CACxEqB,cAACqJ,IAAI,CAAC7F,KAAM,GAAI7D,UAAU,UAC1BK,cAAA,QAAML,UAAU,eAAchB,SAAC,aAEjCe,eAACyJ,IAAY,CAACjC,IAAI,IAAI7D,KAAK,aAAaC,QAAS,SAAAV,GAAC,OAAIA,EAAEC,gBAAgB,EAAClE,SAAA,CACvEqB,cAACsJ,IAAW,CAAC9F,KAAM,GAAI7D,UAAU,UACjCK,cAAA,QAAML,UAAU,eAAchB,SAAC,aAEjCe,eAACyJ,IAAY,CAACjC,IAAI,IAAI7D,KAAK,aAAaC,QAAS,SAAAV,GAAC,OAAIA,EAAEC,gBAAgB,EAAClE,SAAA,CACvEqB,cAACuJ,IAAa,CAAC/F,KAAM,GAAI7D,UAAU,UACnCK,cAAA,QAAML,UAAU,eAAchB,SAAC,aAEjCqB,cAACmJ,IAAY,CAACK,SAAO,IACrB9J,eAACyJ,IAAY,CAACjC,IAAI,IAAI7D,KAAK,0BAA0BC,QAAS,SAAAV,GAAC,OAAIA,EAAEC,gBAAgB,EAAClE,SAAA,CACpFqB,cAACuD,IAAQ,CAACC,KAAM,GAAI7D,UAAU,UAC9BK,cAAA,QAAML,UAAU,eAAchB,SAAC,gBAEjCe,eAACyJ,IAAY,CAACjC,IAAI,IAAI7D,KAAK,iBAAiBC,QAAS,SAAAV,GAAC,OAAIA,EAAEC,gBAAgB,EAAClE,SAAA,CAC3EqB,cAACyJ,IAAU,CAACjG,KAAM,GAAI7D,UAAU,UAChCK,cAAA,QAAML,UAAU,eAAchB,SAAC,eAEjCe,eAACyJ,IAAY,CAACjC,IAAI,IAAI7D,KAAK,aAAaC,QAAS,SAAAV,GAAC,OAAIA,EAAEC,gBAAgB,EAAClE,SAAA,CACvEqB,cAAC0J,IAAU,CAAClG,KAAM,GAAI7D,UAAU,UAChCK,cAAA,QAAML,UAAU,eAAchB,SAAC,WAEjCe,eAACyJ,IAAY,CAACjC,IAAKyC,IAAMC,GAAG,SAAQjL,SAAA,CAClCqB,cAAC6J,IAAK,CAACrG,KAAM,GAAI7D,UAAU,UAC3BK,cAAA,QAAML,UAAU,eAAchB,SAAC,mBAKzC,E,kBCvCemL,EA5BI,SAAArL,GAEjB,IAAQR,EAAkBQ,EAAlBR,KAAMI,EAAYI,EAAZJ,QAGR0L,EAAe,WACnB,MAAa,SAAT9L,EACK+B,cAACgK,IAAG,CAACrK,UAAU,QAAQ2D,QAAS,kBAAMjF,EAAQ,QAAQ,IAEtD2B,cAACiK,IAAI,CAACtK,UAAU,QAAQ2D,QAAS,kBAAMjF,EAAQ,OAAO,GAEjE,EAEA,OACEqB,eAACN,WAAQ,CAAAT,SAAA,CACPqB,cAAA,OAAKL,UAAU,6CAA4ChB,SACzDqB,cAACkK,IAAO,CAACvK,UAAU,oBAAmBhB,SACpCqB,cAACmK,IAAO,CAACxK,UAAU,iBAAgBhB,SACjCqB,cAAC+J,EAAY,UAInB/J,cAAA,MAAIL,UAAU,4CAA2ChB,SACvDqB,cAACyI,EAAY,QAIrB,E,SCTe2B,EAlBK,SAAA3L,GAElB,IAAQR,EAAqCQ,EAArCR,KAAMI,EAA+BI,EAA/BJ,QAASgM,EAAsB5L,EAAtB4L,kBAEvB,OACE3K,eAACN,WAAQ,CAAAT,SAAA,CACPqB,cAAA,MAAIL,UAAU,uBAAsBhB,SAClCqB,cAACkK,IAAO,CAACvK,UAAU,gDAA+ChB,SAChEqB,cAACmK,IAAO,CAACxK,UAAU,gDAAgD2D,QAAS,kBAAM+G,GAAkB,EAAK,EAAC1L,SACxGqB,cAACsK,IAAI,CAAC3K,UAAU,gBAItBK,cAAC8J,EAAU,CAAC7L,KAAMA,EAAMI,QAASA,MAGvC,E,kBCoCekM,EAtDY,SAAA9L,GAEzB,IAAQa,EAAgFb,EAAhFa,cAAekD,EAAiE/D,EAAjE+D,iBAAkB6H,EAA+C5L,EAA/C4L,kBAAmBG,EAA4B/L,EAA5B+L,aAAcC,EAAchM,EAAdgM,UAG1ElN,qBAAU,YACHkN,GAAanL,GAAekL,EAAa,GAChD,GAAG,CAACC,EAAWnL,IAGf,IAAMoL,EAAU,WACd,OAAKpL,EAWDU,cAAC2K,IAAM,CACLnH,KAAM,GACN,YAAU,cACV7D,UAAU,6CACV2D,QAAS,kBAAMd,GAAiB,EAAM,IAbxCxC,cAAC4K,IAAI,CACHpH,KAAM,GACN,YAAU,cACV7D,UAAU,6CACV2D,QAAS,kBAAMd,GAAiB,EAAK,GAa7C,EAEA,OACExC,cAAA,OAAKL,UAAU,gBAAehB,SAC5Be,eAAA,MAAIC,UAAU,0BAAyBhB,SAAA,CACrCqB,cAAA,MAAIL,UAAU,mBAAkBhB,SAC9Be,eAACyK,IAAO,CAACP,GAAG,IAAIjK,UAAU,eAAchB,SAAA,CACtCqB,cAAA,QAAML,UAAU,aAAYhB,SAC1BqB,cAAA,OAAKqI,IAAKwC,IAAYC,IAAIC,aAAczC,IAAI,WAE9CtI,cAAA,MAAIL,UAAU,kBAAiBhB,SAAEkM,IAAYC,IAAIE,eAGrDhL,cAAA,MAAIL,UAAU,sBAAqBhB,SACjCe,eAAA,OAAKC,UAAU,4CAA2ChB,SAAA,CACxDqB,cAAC0K,EAAO,IACR1K,cAAC4D,IAAC,CAACN,QAAS,kBAAM+G,GAAkB,EAAM,EAAE1K,UAAU,uCAAuC6D,KAAM,cAM/G,ECYeyH,GAhEa,SAAHvK,GAKlB,IAJLwK,EAAIxK,EAAJwK,KACAC,EAAUzK,EAAVyK,WACAC,EAAa1K,EAAb0K,cACAC,EAAiB3K,EAAjB2K,kBAGMC,EAAUJ,EAAKK,aAAe,IAAMpB,IAGpCqB,EAAWC,cAQjB,OANAlO,qBAAU,WACkB,OAAtB8N,GACFD,EAAcC,EAElB,GAAG,CAACG,IAGFxL,cAAA,MACEL,UAAWC,IAAW,CACpB,YAAasL,EAAKvM,SAClB+M,SAAUR,EAAKQ,SACfC,OAAQT,EAAKU,UAAYT,IACxBxM,SAEHe,eAAC4L,EAAOpL,wBAAA,CACNP,UAAU,4BACV2G,OAAQ4E,EAAKW,OAAS,cAAWnE,IAEN,IAAtBwD,EAAKK,aACN,CACElI,KAAM6H,EAAKU,SAAW,KAExB,CACEhC,GAAIsB,EAAKU,SAAW,IACpBE,SAAU,SAAAC,GACR,IAAKA,EACH,OAAO,EAIPA,EAAMC,KACQ,KAAdD,EAAMC,KACND,EAAMC,MAAQd,EAAKU,UAEnBP,EAAoBH,EAAKU,QAE7B,IACD,IAAAjN,SAAA,CAEJuM,EAAKpE,KACN9G,cAAA,QAAML,UAAU,0BAAyBhB,SAAEuM,EAAKe,QAE/Cf,EAAKgB,OAAShB,EAAK7D,UAClBrH,cAACmI,IAAK,CAACxI,UAAU,eAAemF,MAAOoG,EAAKgB,MAAO9D,MAAI,EAAAzJ,SACpDuM,EAAK7D,YAEN,UAIZ,E,6BCjEa8E,GAAiBC,0BCmCjBC,IDhCMC,aAAoBH,GAAeI,UCgCxB,SAAjBF,EAAkBnB,EAAMsB,GACnC,IAAQ7N,EAAauM,EAAbvM,SAER,IAAKA,EACH,OAAO,EACR,IAE2B8N,EAF3BC,EAAAC,aAEmBhO,GAAQ,IAA5B,IAAA+N,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA8B,CAAC,IAApBC,EAAKN,EAAA1J,MACd,GAAIgK,EAAMpO,UACJ0N,EAAeU,EAAOP,GACxB,OAAO,EAKX,GAAIO,GAASA,EAAMnB,SAAWY,IAAeO,EAAMnB,UAAYY,GAAcA,EAAWQ,SAASD,EAAMnB,UACrG,OAAO,CAEX,CAAC,OAAAqB,GAAAP,EAAA9J,EAAAqK,EAAA,SAAAP,EAAAQ,GAAA,CAED,OAAO,CACT,GAUaC,GAAiB,SAAjBA,EAAkBxO,EAAUyO,EAAWC,GAClD1O,EAASoJ,SAAQ,SAAAgF,GACf,IAAKM,EAAmBL,SAASD,EAAM1I,IAAK,CAC1C,IAAMH,EAAQkJ,EAAUE,QAAQP,EAAM1I,IAClCH,GAAS,GAAGkJ,EAAUG,OAAOrJ,EAAO,GACpC6I,EAAMpO,UAAUwO,EAAeJ,EAAMpO,SAAUyO,EAAWC,EAChE,CACF,GACF,E,2NC2GeG,GA5Kc,SAAH9M,GAgBnB,IAfLwK,EAAIxK,EAAJwK,KACAuC,EAAS/M,EAAT+M,UACAhD,EAAS/J,EAAT+J,UACAU,EAAUzK,EAAVyK,WACAuC,EAAUhN,EAAVgN,WACAC,EAAWjN,EAAXiN,YACAC,EAAWlN,EAAXkN,YACAP,EAAkB3M,EAAlB2M,mBACA7C,EAAY9J,EAAZ8J,aACAY,EAAa1K,EAAb0K,cACA9L,EAAaoB,EAAbpB,cACAuO,EAAcnN,EAAdmN,eACAC,EAAqBpN,EAArBoN,sBACAzC,EAAiB3K,EAAjB2K,kBACG7F,EAAIC,YAAA/E,EAAAgF,IAGD8F,EAAWC,cAGXsC,EAAatC,cAAcuC,SA0D3BC,EAAkB,SAACrL,EAAGsI,IAvDJ,SAACA,EAAMgD,GAC7B,IAAId,EAAYK,EACVU,EAAcP,EAGhBR,EAAUJ,SAAS9B,EAAK7G,KAC1B+I,EAAUG,OAAOH,EAAUE,QAAQpC,EAAK7G,IAAK,GAGzC6G,EAAKvM,UACPwO,GAAejC,EAAKvM,SAAUyO,EAAWQ,IAG3CO,EAAYnB,SAAS9B,EAAK7G,KAC1BgJ,EAAmBL,SAAS9B,EAAK7G,MAM9B8J,EAAYnB,SAAS9B,EAAK7G,KAC3BgJ,EAAmBL,SAAS9B,EAAK7G,IAEjC8J,EAAYnG,KAAKkD,EAAK7G,IAEtB8J,EAAYZ,OAAOY,EAAYb,QAAQpC,EAAK7G,IAAK,GAInDwJ,EAAc7P,aAAKmQ,KACVD,GAELA,EAAOvP,UACTwO,GAAee,EAAOvP,SAAUyO,EAAWQ,GAIxCR,EAAUJ,SAAS9B,EAAK7G,KAC3B+I,EAAUpF,KAAKkD,EAAK7G,MAMtB+I,EAAY,IAGGJ,SAAS9B,EAAK7G,KAC3B+I,EAAUpF,KAAKkD,EAAK7G,IAGxBmG,EAAYxM,aAAKoP,GACnB,CAIEgB,CAAgBlD,EAAMwC,GAEtB9K,EAAEC,gBACJ,EAGAtF,qBAAU,WACR,GAAI8O,GAAenB,EAAM6C,GAClBH,EAAYZ,SAAS9B,EAAK7G,KAAKuJ,EAAY5F,KAAKkD,EAAK7G,QACrD,CACL,IAAMH,EAAQ0J,EAAYN,QAAQpC,EAAK7G,IACnCH,GAAS,GAAG0J,EAAYL,OAAOrJ,EAAO,EAC5C,CACA2J,EAAc7P,aAAK4P,IACnBE,EAAqB9P,aAAK4P,IAC1BpD,EAAa,GACf,GAAG,CAACgB,IAGJ,IAA2BnH,EAgB3B,OACE3E,eAAA,MACEC,UAAWC,IAAW,mBAAoB,CACxCwD,MAnBqBiB,EAmBI6G,EAAK7G,GAlB7B/E,GAAiBmL,IAAgC,IAAlBnL,KAC9BsO,EAAYZ,SAAS3I,KAAOoJ,EAAUT,SAAS3I,UAAnD,IAIAuJ,EAAYZ,SAAS3I,KACrB/E,IACc,IAAdmL,IAIO,MAQL,sBAAuBmD,EAAYZ,SAAS9B,EAAK7G,IACjD,uBACEuJ,EAAYZ,SAAS9B,EAAK7G,KAC1BoJ,EAAUT,SAAS9B,EAAK7G,KACxBgJ,EAAmBL,SAAS9B,EAAK7G,MAClC1F,SAAA,CAEHe,eAACiK,IAAI,CACHhK,UAAU,4BACViK,GAAG,IACHtG,QAAS,SAAAV,GAAC,OAAIqL,EAAgBrL,EAAGsI,EAAK,EAACvM,SAAA,CAEtCuM,EAAKpE,KACN9G,cAAA,QAAML,UAAU,2BAA0BhB,SAAEuM,EAAKe,QAEhDf,EAAKgB,OAAShB,EAAK7D,UAClBrH,cAACmI,IAAK,CAACxI,UAAU,eAAemF,MAAOoG,EAAKgB,MAAO9D,MAAI,EAAAzJ,SACpDuM,EAAK7D,YAEN,QAINrH,cAAA,MAAIL,UAAU,eAAchB,SAC1BqB,cAACqO,IAAQ,CACPC,OACGV,GAAeA,EAAYZ,SAAS9B,EAAK7G,KACzCoJ,GAAaA,EAAUT,SAAS9B,EAAK7G,IACvC1F,SAEDqB,cAACuO,GAAoBrO,wBAAA,GACfsF,GAAI,IACRgJ,MAAOtD,EAAKvM,SACZiP,YAAaA,EACbC,eAAgBA,EAChBR,mBAAoBA,EACpBS,sBAAuBA,EACvBL,UAAWA,EACXjD,aAAcA,EACdkD,WAAYxC,EACZ5L,cAAeA,EACfmL,UAAWA,EACXkD,YAAaA,EACbtC,kBAAmBA,EACnBF,WAAYA,EACZC,cAAeA,WAM3B,E,UC9KeqD,GATsB,SAAH/N,GAAkB,IAAZwK,EAAIxK,EAAJwK,KACtC,OACExL,eAAA,MAAIC,UAAU,oBAAmBhB,SAAA,CAC/BqB,cAAA,QAAArB,SAAOuM,EAAKwD,SACZ1O,cAAC2O,KAAc,CAAChP,UAAU,8BAGhC,ECsBeiP,GApBc,SAAAnQ,GAE3B,IAAMoQ,EAAa,CACjB5D,uBACAuC,wBACAiB,iCAYF,OARuBhQ,EAAM+P,MAAMxK,KAAI,SAACkH,EAAMhH,GAC5C,IAAM4K,EAAUD,EHd+B,SAAA3D,GACjD,OAAIA,EAAKwD,OAAe,+BACpBxD,EAAKvM,SAAiB,uBACnB,qBACT,CGU+BoQ,CAAwB7D,IACnD,OAAIA,EAAKvM,SACAqB,cAAC8O,EAAO5O,YAAA,CAACgL,KAAMA,EAAMhH,MAAOA,GAAyBzF,GAAbyM,EAAK7G,IAE/CrE,cAAC8O,EAAO5O,YAAA,CAA8BgL,KAAMA,GAAUzM,GAAxCyM,EAAK7G,IAAM6G,EAAKwD,OACvC,GAGF,ECkEeM,GArFC,SAAAvQ,GAEd,IAAQa,EAAwEb,EAAxEa,cAAeqO,EAAyDlP,EAAzDkP,YAAasB,EAA4CxQ,EAA5CwQ,KAAM5D,EAAsC5M,EAAtC4M,kBAAmBpN,EAAmBQ,EAAnBR,KAAMiR,EAAazQ,EAAbyQ,SAGnEvO,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvC8M,EAAS5M,EAAA,GAAE2J,EAAY3J,EAAA,GAC9BsO,EAAsCvO,mBAAS,IAAGwO,EAAAtO,YAAAqO,EAAA,GAA3CvB,EAAWwB,EAAA,GAAEvB,EAAcuB,EAAA,GAClCC,EAAoDzO,mBAAS,IAAG0O,EAAAxO,YAAAuO,EAAA,GAAzDhC,EAAkBiC,EAAA,GAAExB,EAAqBwB,EAAA,GAChDC,EAAoC3O,mBAAS,MAAK4O,EAAA1O,YAAAyO,EAAA,GAA3CpE,EAAUqE,EAAA,GAAEpE,EAAaoE,EAAA,GAGhCC,EAAkC7O,oBAAS,GAAM8O,EAAA5O,YAAA2O,EAAA,GAA1ChF,EAASiF,EAAA,GAAEC,EAAYD,EAAA,GAGxBE,EAAYC,iBAAO,MAoBzB,OACE7P,cAACZ,WAAQ,CAAAT,SACPqB,cAAA,OACEL,UAAWC,IAAW,kDAAmD,CACvEkQ,SAAUrF,IAA+B,IAAlBnL,EACvB,aAAuB,cAATrB,GAAiC,SAATA,EACtC,YAAsB,cAATA,GAAiC,SAATA,IAEvC8R,aAzBe,WACnBJ,GAAa,EACf,EAwBMK,aAAc,kBAAML,GAAa,EAAM,EAAChR,SAEvCsQ,GAGCvP,eAACN,WAAQ,CAAAT,SAAA,CAEPqB,cAACuK,EAAkBrK,YAAA,CAACsK,aAAcA,EAAcC,UAAWA,GAAehM,IAE1EuB,cAAA,OAAKL,UAAU,gBAAgBgH,IAAKiJ,IAEpC5P,cAACyD,IAAgB,CACf9D,UAAU,oBACV+D,QAAS,CAAEC,kBAAkB,GAC7BsM,UAAW,SAAAC,GAAS,OAnCb,SAAAA,GACbN,GAAaM,EAAUC,UAAY,EAChCP,EAAUQ,QAAQvS,UAAUwS,SAAS,YACxCT,EAAUQ,QAAQvS,UAAUK,IAAI,WAG9B0R,EAAUQ,QAAQvS,UAAUwS,SAAS,YACvCT,EAAUQ,QAAQvS,UAAUC,OAAO,UAGzC,CAyBoCwS,CAAWJ,EAAU,EAACvR,SAE9CqB,cAAA,MAAIL,UAAU,6BAA4BhB,SACxCqB,cAACuO,GAAoB,CACnBC,MAAOU,EACPA,SAAUA,EACVzE,UAAWA,EACXgD,UAAWA,EACXtC,WAAYA,EACZyC,YAAaA,EACbP,mBAAoBA,EACpBM,YAAaA,EACbnD,aAAcA,EACdlL,cAAeA,EACf8L,cAAeA,EACfyC,eAAgBA,EAChBC,sBAAuBA,EACvBzC,kBAAmBA,cASrC,ECvFakF,GAAS,WAEpB,IAAMtT,EAAWC,cACXwE,EAAQtE,aAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOkT,KAAK,IAmBrD,OAZAjT,qBAAU,WAER,IAAME,EAAUE,SAAS8S,qBAAqB,QAAQ,GAGlD/O,EACFjE,EAAQiT,aAAa,MAAO,OAE5BjT,EAAQiT,aAAa,MAAO,MAEhC,GAAG,CAAChP,IAEG,CAACA,EAhBS,SAAAqB,GACf9F,EAAS0T,YAAU5N,GACrB,EAeF,EC1Ba6N,GAAgB,WAE3B,IAAM3T,EAAWC,cAOjB,MAAO,CAAE4E,WANK1E,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM,IAMpBwE,WAAYM,cAJjB,SAAA9D,GACpBrB,EAAS4T,YAAiBvS,GAC5B,EAGF,ECVawS,GAAgB,WAE3B,IAAM7T,EAAWC,cAOjB,MAAO,CACLmF,cALoB,SAAA/D,GACpBrB,EAAS8T,YAAiBzS,GAC5B,EAIEyD,WARY3E,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM,IAQ3ByE,WAEtB,ECbaiP,GAAiB,WAE5B,IAAM/T,EAAWC,cAQjB,MAAO,CAAE8E,YAPK5E,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM,IAOnB0E,YAAaM,eAJlB,SAAAS,GACrB9F,EAASgU,YAAkBlO,GAC7B,EAGF,ECqNemO,I,cAhMQ,SAAAzS,GAErB,IAAQwQ,EAA4FxQ,EAA5FwQ,KAAMhQ,EAAsFR,EAAtFQ,OAAQkS,EAA8E1S,EAA9E0S,OAAQjC,EAAsEzQ,EAAtEyQ,SAAUvQ,EAA4DF,EAA5DE,SAAUgP,EAAkDlP,EAAlDkP,YAAazL,EAAqCzD,EAArCyD,cAAemJ,EAAsB5M,EAAtB4M,kBAG9E+F,EAA0Bb,KAAQc,EAAAvQ,YAAAsQ,EAAA,GAA3B1P,EAAK2P,EAAA,GAAE1P,EAAQ0P,EAAA,GACtBC,EAA0BtU,cAAlBiB,EAAIqT,EAAJrT,KAAMI,EAAOiT,EAAPjT,QACdkT,EAAsCX,KAA9B9O,EAAUyP,EAAVzP,WAAYM,EAAamP,EAAbnP,cACpBoP,EAAsCV,KAA9B/O,EAAUyP,EAAVzP,WAAYM,EAAamP,EAAbnP,cACpBoP,EAAwCT,KAAhChP,EAAWyP,EAAXzP,YAAaM,EAAcmP,EAAdnP,eAGrB3B,EAAkCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BsO,EAA4CvO,oBAAS,GAAMwO,EAAAtO,YAAAqO,EAAA,GAApDuC,EAActC,EAAA,GAAE/E,EAAiB+E,EAAA,GACxCC,EAAsCzO,mBAASlD,OAAOiU,YAAWrC,EAAAxO,YAAAuO,EAAA,GAA1DuC,EAAWtC,EAAA,GAAEuC,EAAcvC,EAAA,GAG5BrS,EAAWC,cACX4U,GAAc1U,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM,IAG/CyU,GAAoB,WACxBF,EAAenU,OAAOiU,WACxB,EAGMnG,GAAWC,cACXvM,GAAe4S,GAAY5S,aAC3BI,GAAgBwS,GAAYxS,cAC5BsC,GAAWkQ,GAAYtS,WAGvBgD,GAAmB,SAAAwP,GAAG,OAAI/U,EAASsC,YAAoByS,GAAK,EASlEzU,qBAAU,WACJmU,GAAkBE,EAAc,MAClCvH,GAAkB,EAEtB,GAAG,CAACmB,KAGJjO,qBAAU,gBACOmK,IAAXhK,QACFA,OAAOmI,iBAAiB,SAAUkM,GAEtC,GAAG,CAACH,IAGJrU,qBAAU,WAER,OADAyD,GAAa,GACN,kBAAMA,GAAa,EAAM,CAClC,GAAG,IAGH,IAAMiR,GAAgB,CACpBC,OAAQ,gBACRC,OAAQ,eACRC,OAAQ,iBAUJC,GAAgB,CACpBC,SAA2B,UAAjBpT,GAA2B,6BAA+B,eACpEiT,OAAQ,YACRD,OAAQ,oBACRE,OAAQ,UAGJG,GAAmC,KAAhBvQ,GAAsC,UAAhBA,GAA2C,UAAhBA,EAE1E,OAAKjB,EAIHrB,eAAA,MAAAQ,wBAAA,CACEP,UAAWC,IAAW,2BAADK,OArBI,CAC3BqS,SAAU,kBACVH,OAAQ,gBACRD,OAAQ,gBACRE,OAAQ,iBAkB4CtQ,IAAe,kBAAiB,KAAA7B,OAC9EgS,GAAclQ,IAAe,iBAE/B,CAEE,uBAAwB6P,GAAe,KACvC,iBAAkBtS,IAAiBsS,GAAe,KAClD,iBAAkBtS,IAAiBsS,EAAc,KAGjD,wBAAyBA,EAAc,KACvC,aAAcF,GAAkBE,EAAc,KAC9C,YAAaF,GAAkBE,EAAc,QAG5ChQ,GAAW,CAAE,WAAY,YAAe,CAAC,GAAC,IAAAjD,SAAA,CAE7CiD,GAYE,KAXF5B,cAACwS,GAAgB,CACfvU,KAAMA,EACNgR,KAAMA,EACNC,SAAUA,EACVvB,YAAaA,EACbrO,cAAeA,GACfoS,eAAgBA,EAChBlP,iBAAkBA,GAClB6H,kBAAmBA,EACnBgB,kBAAmBA,IAIvBrL,cAACyS,IAAM,CACLC,OAAO,KACPxC,WAAW,EACXyC,MAAgB,SAAT1U,EACPE,KAAe,SAATF,GAAmBsU,GACzBzN,MAAOyN,GAAmBvQ,OAAc0F,EACxC/H,UAAWC,IAAW,2CAADK,OACwBoS,GAAcvQ,IAAe,eAAc,mBACtFnD,SAEFqB,cAAA,OAAKL,UAAU,kCAAiChB,SAC7CM,GAAkBe,cAAC4S,EAAe,CAACvI,kBAAmBA,EAAmBpM,KAAMA,EAAMI,QAASA,QAGlGM,EAGDqB,cAAA,OACEL,UAAWC,IAAW,kBAAmB,CACvCiT,KAAMnB,IAERpO,QAAS,kBAAM+G,GAAkB,EAAM,KAIN,IAAlCQ,IAAYvN,OAAOwV,WAClB9S,cAACyB,EAAU,CACTxD,KAAMA,EACNI,QAASA,EACT0D,WAAYA,EACZM,cAAeA,EACfP,WAAYA,EACZM,cAAeA,EACfJ,YAAaA,EACbM,eAAgBA,EAChBZ,MAAOA,EACPC,SAAUA,EACVrE,OAAQmB,EAAMnB,OACduE,UAAWpD,EAAMoD,UACjBK,cAAeA,EACfN,SAAUA,GACVK,YA3HY,SAAA+P,GAAG,OAAI/U,EAASwC,YAAiBuS,GAAK,EA4HlD9S,aAAcA,GACdqD,gBAhIgB,SAAAyP,GAAG,OAAI/U,EAASoC,YAAmB2S,GAAK,EAiIxD1S,cAAeA,GACfkD,iBAAkBA,GAClB1D,WAAYL,EAAMK,WAClBqD,cAAe1D,EAAM0D,cACrB0I,YAAaA,MAEb,KACJ7K,cAAA,UACEL,UAAWC,IAAW,uBAADK,OAAwBgS,GAAclQ,IAAe,iBAAmB,CAC3F,SAAyB,WAAfA,IACTpD,SAEFwS,GAAkBnR,cAAC+S,EAAe,CAAChR,WAAYA,EAAYkQ,cAAeA,QAG3C,IAAjCpH,IAAYvN,OAAO6S,UAClBnQ,cAAA,OAAKL,UAAU,gBAAehB,SAC5BqB,cAACgT,EAAW,CAAC1N,WAAY,IAAK3F,UAAU,qBAAoBhB,SAC1DqB,cAACiT,IAAM,CAACtT,UAAU,WAAWmF,MAAM,UAASnG,SAC1CqB,cAACkT,IAAO,CAAC1P,KAAM,WAInB,SAvGC,IA0GX,G,8BChOe,IACb,CACEa,GAAI,OACJ4H,MAAO,kFACPnF,KAAM9G,cAACmT,KAAG,CAAC3P,KAAM,KACjBoI,QAAS,SAEX,CACEvH,GAAI,aACJ4H,MAAO,4EACPnF,KAAM9G,cAACoT,KAAK,CAAC5P,KAAM,KACnBoI,QAAS,gBAEX,CACEvH,GAAI,aACJ4H,MAAO,6CACPnF,KAAM9G,cAACqT,KAAO,CAAC7P,KAAM,KACrBoI,QAAS,WCGEsF,GAfQ,SAAAzS,GAQrB,OACEuB,cAACsT,GAAMpT,wBAAA,CAACgP,SAAUqE,IAAgB9U,GAAK,IAAAE,SACpCF,EAAME,WAGb,ECqDe6U,GAlEe,SAAH9S,GAOpB,IANLwK,EAAIxK,EAAJwK,KACAuI,EAAO/S,EAAP+S,QACAtI,EAAUzK,EAAVyK,WACAC,EAAa1K,EAAb0K,cACAsI,EAAehT,EAAfgT,gBACArI,EAAiB3K,EAAjB2K,kBAGMC,EAAUJ,EAAKK,aAAe,IAAMpB,IAY1C,OANA5M,qBAAU,WACkB,OAAtB8N,GACFD,EAAcC,EAElB,GAAG,CAACG,SAASwC,WAGXhO,cAAA,MACEL,UAAWC,IAAW,WAAY,CAChC+L,OAAQT,EAAKU,UAAYT,EACzBO,SAAUR,EAAKQ,WAEjBpI,QAfuB,WAAH,OAASoQ,EAAgB,GAAG,EAepB/U,SAE5Be,eAAC4L,EAAOpL,wBAAA,CACNP,UAAWC,IAAW,4BAA6B,CACjD,gBAAiB6T,EACjB,YAAaA,IAEfvM,IAAKoE,EACLhF,OAAQ4E,EAAKW,OAAS,cAAWnE,IAEN,IAAtBwD,EAAKK,aACN,CACElI,KAAM6H,EAAKU,SAAW,KAExB,CACEhC,GAAIsB,EAAKU,SAAW,IACpBE,SAAU,SAACC,EAAOP,GAChB,IAAKO,EACH,OAAO,EAIPA,EAAMC,KACQ,KAAdD,EAAMC,KACND,EAAMC,MAAQd,EAAKU,UAEnBP,EAAoBH,EAAKU,QAE7B,IACD,IAAAjN,SAAA,CAGJuM,EAAKpE,KACN9G,cAAA,QAAArB,SAAOuM,EAAKe,aAIpB,EC+De0H,GAtHgB,SAAAlV,GAE7B,IACEyM,EAYEzM,EAZFyM,KACA0I,EAWEnV,EAXFmV,QACAzI,EAUE1M,EAVF0M,WACAwC,EASElP,EATFkP,YACAC,EAQEnP,EARFmP,YACAmC,EAOEtR,EAPFsR,aACAC,EAMEvR,EANFuR,aACA6D,EAKEpV,EALFoV,aACAzI,EAIE3M,EAJF2M,cACAyC,EAGEpP,EAHFoP,eACA6F,EAEEjV,EAFFiV,gBACArI,EACE5M,EADF4M,kBAIIG,EAAWC,cAGXsC,EAAatC,cAAcuC,SAEjCzQ,qBAAU,WACR,GAAI8O,GAAenB,EAAM6C,GAClBH,EAAYZ,SAAS9B,EAAK7G,KAAKuJ,EAAY5F,KAAKkD,EAAK7G,QACrD,CACL,IAAMH,EAAQ0J,EAAYN,QAAQpC,EAAK7G,IACnCH,GAAS,GAAG0J,EAAYL,OAAOrJ,EAAO,EAC5C,CACA2J,EAAc7P,aAAK4P,GACrB,GAAG,CAACpC,IAGJ,IAAMsI,EAAgB,CACpB,CACEC,SAAS,EACTC,MAAO,QACPlQ,KAAM,eACNmQ,GAAI,SAAAC,GACF,IAKeC,EALTC,EAAa1W,OAAO2W,YACxBC,EAAWJ,EAAK7W,MAAMkX,SAASC,OAC/BC,EAAQH,EAASI,wBAAwB1O,IAMvCoO,EAAaK,EALJH,EAASK,aAKc,GAAK,IAEvCR,EAAY,CACVS,UAFUR,EAAaK,EAAQ,GAG/BI,UAAW,SAIf,IAAMC,EAAQR,EAASI,wBAGnBI,EAAMC,KAAOD,EAAMtM,OAAS9K,OAAOiU,WAAa,KAAO,GACzD2C,EAASU,QAAQ,aAAanX,UAAUK,IAAI,YAG9CgW,EAAK7W,MAAM4X,OAAOT,OAAMtU,wBAAA,GAAQgU,EAAK7W,MAAM4X,OAAOT,QAAWL,EAC/D,IAGJ,OACEzU,eAACwV,IAAQ,CACPhO,IAAI,KACJiO,OAAQ,kBAAM,IAAI,EAClBxV,UAAWC,IAAW,CACpB,YAAwB,IAAZgU,EACZ,oBAAgC,IAAZA,EACpB,8BAA+BhG,EAAYZ,SAAS9B,EAAK7G,MAE3DiK,OAAQuF,EAAa7G,SAAS9B,EAAK7G,IACnC0L,aAAc,kBAAMA,EAAa7E,EAAK7G,GAAG,EACzC2L,aAAc,kBAAMA,EAAa9E,EAAK7G,GAAG,EAAC1F,SAAA,CAE1Ce,eAACqJ,IAAc,CACba,GAAG,IACH1C,IAAKyC,IACLrG,QAAS,SAAAV,GAAC,OAAIA,EAAEC,gBAAgB,EAChClD,UAAWC,IAAW,4CAA6C,CACjE,iBAA6B,IAAZgU,EACjB,YAAwB,IAAZA,IACXjV,SAAA,CAEFuM,EAAKpE,KACN9G,cAAA,QAAArB,SAAOuM,EAAKe,WAEdjM,cAACiJ,IAAY,CACX/B,IAAI,KACJkO,UAAWtB,EACXnU,UAAWC,IAAW,CAAE,eAA2B,IAAZgU,IAAqBjV,SAE5DqB,cAACqV,GAAsB,CACrBzB,SAAS,EACTlG,WAAYxC,EACZsD,MAAOtD,EAAKvM,SACZwM,WAAYA,EACZyC,YAAaA,EACbD,YAAaA,EACbkG,aAAcA,EACd9D,aAAcA,EACdC,aAAcA,EACd5E,cAAeA,EACfyC,eAAgBA,EAChB4F,SAAS,EACTC,gBAAiBA,EACjBrI,kBAAmBA,QAK7B,ECxGegK,GAnBgB,SAAA5W,GAE7B,IAAMoQ,EAAa,CACjB8E,0BACAH,0BAYF,OARuB/U,EAAM+P,MAAMxK,KAAI,SAACkH,EAAMhH,GAC5C,IAAM4K,EAAUD,EdAiC,SAAA3D,GACnD,OAAIA,EAAKvM,SAAiB,yBACnB,uBACT,CcH+BoQ,CAAwB7D,IACnD,OAAIA,EAAKvM,SACAqB,cAAC8O,EAAO5O,YAAA,CAACgL,KAAMA,EAAMhH,MAAOA,GAAyBzF,GAAbyM,EAAK7G,GAGxD,GAGF,ECsBeiR,GA1CQ,SAAH5U,GAAsD,IAAhDwO,EAAQxO,EAARwO,SAAU7D,EAAiB3K,EAAjB2K,kBAAmBsC,EAAWjN,EAAXiN,YAErDhN,EAAoCC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA3CwK,EAAUtK,EAAA,GAAEuK,EAAavK,EAAA,GAChCsO,EAAsCvO,mBAAS,IAAGwO,EAAAtO,YAAAqO,EAAA,GAA3CvB,EAAWwB,EAAA,GAAEvB,EAAcuB,EAAA,GAClCC,EAAwCzO,mBAAS,IAAG0O,EAAAxO,YAAAuO,EAAA,GAA7CwE,EAAYvE,EAAA,GAAEoE,EAAepE,EAAA,GAgBpC,OACEtP,cAAA,OAAKL,UAAU,qCAAoChB,SACjDqB,cAAA,MAAIL,UAAU,iBAAiB0E,GAAG,uBAAsB1F,SACtDqB,cAACqV,GAAsB,CACrBzB,SAAS,EACTpF,MAAOU,EACP/D,WAAYA,EACZyC,YAAaA,EACbD,YAAaA,EACboC,aAtBa,SAAA1L,GACnB,IAAMkR,EAAM1B,EACZ0B,EAAIvN,KAAK3D,GACTqP,EAAe1V,aAAKuX,GACtB,EAmBQvF,aAhBa,SAAA3L,GACnB,IAAMkR,EAAM1B,EACZ0B,EAAIhI,OAAOgI,EAAIjI,QAAQjJ,GAAK,GAC5BqP,EAAe1V,aAAKuX,GACtB,EAaQ1B,aAAcA,EACdzI,cAAeA,EACfyC,eAAgBA,EAChB6F,gBAAiBA,EACjBrI,kBAAmBA,OAK7B,ECmKemK,I,OA9KU,SAAA/W,GAAU,IAADC,EAExBC,EAA4FF,EAA5FE,SAAUM,EAAkFR,EAAlFQ,OAAQiQ,EAA0EzQ,EAA1EyQ,SAAUiC,EAAgE1S,EAAhE0S,OAAQlC,EAAwDxQ,EAAxDwQ,KAAM5D,EAAkD5M,EAAlD4M,kBAAmBsC,EAA+BlP,EAA/BkP,YAAazL,EAAkBzD,EAAlByD,cAGlFoP,EAA0BtU,cAAlBiB,EAAIqT,EAAJrT,KAAMI,EAAOiT,EAAPjT,QACd+S,EAA0Bb,KAAQc,EAAAvQ,YAAAsQ,EAAA,GAA3B1P,EAAK2P,EAAA,GAAE1P,EAAQ0P,EAAA,GACtBE,EAAsCX,KAA9B9O,EAAUyP,EAAVzP,WAAYM,EAAamP,EAAbnP,cACpBoP,EAAsCV,KAA9B/O,EAAUyP,EAAVzP,WAAYM,EAAamP,EAAbnP,cACpBoP,EAAwCT,KAAhChP,EAAWyP,EAAXzP,YAAaM,EAAcmP,EAAdnP,eAGrB3B,EAAkCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BsO,EAA4CvO,oBAAS,GAAMwO,EAAAtO,YAAAqO,EAAA,GAApDsG,EAAcrG,EAAA,GAAEsG,EAAiBtG,EAAA,GAGlCnS,EAAWC,cACX4U,EAAc1U,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM,IAG/C4B,EAAe4S,EAAY5S,aAC3B0C,GAAWkQ,EAAYtS,WAe7BjC,qBAAU,WAUR,OATAyD,GAAa,GACbtD,OAAOmI,iBAAiB,UAAU,WAC5BnI,OAAOoI,YAAc,KAAyB,IAAnB2P,GAC7BC,GAAkB,GAEhBhY,OAAOoI,YAAc,IACvB4P,GAAkB,EAEtB,IACO,kBAfP1U,GAAa,QACb0U,GAAkB,EAcI,CACxB,GAAG,IAGH,IAAMzD,GAAgB,CACpBC,OAAQ,gBACRC,OAAQ,eACRC,OAAQ,iBASJC,GAAgB,CACpBC,SAA2B,UAAjBpT,EAA2B,6BAA+B,eACpEiT,OAAQ,aAGJI,GAAmC,KAAhBvQ,GAAsC,UAAhBA,GAA2C,UAAhBA,EAE1E,OAAKjB,EAKHrB,eAAA,MAAAQ,wBAAA,CACEP,UAAWC,IAAW,6CAADK,OAnBI,CAC3BqS,SAAU,kBACVH,OAAQ,gBACRD,OAAQ,iBAiB8DpQ,IAAe,kBAAiB,KAAA7B,OAChGgS,GAAclQ,IAAe,gBAAe,oBAG3CH,GAAW,CAAE,WAAY,YAAe,CAAC,GAAC,IAAAjD,SAAA,CAE/Ce,eAAC+S,IAAM,CACLC,OAAO,KACPxC,WAAW,EACXvQ,UAAWC,IAAW,kFAAmF,CACvG,kBAAmB6V,IAClB9W,SAAA,EAEDM,GACAe,cAAA,OAAKL,UAAU,kCAAiChB,SAC9CqB,cAAA,MAAIL,UAAU,iBAAgBhB,SAC5BqB,cAACkK,IAAO,CAAAvL,SACNe,eAACiK,IAAI,CAACC,GAAG,IAAIjK,UAAU,eAAchB,SAAA,CACnCqB,cAAA,QAAML,UAAU,aAAYhB,SAC1BqB,cAAA,OAAKqI,IAAKwC,IAAYC,IAAIC,aAAczC,IAAI,WAE9CtI,cAAA,MAAIL,UAAU,kBAAiBhB,SAAEkM,IAAYC,IAAIE,mBAO3DhL,cAAA,OAAKL,UAAU,kCAAiChB,SAC7CM,GAAkBe,cAAC4S,EAAe,CAAC3U,KAAMA,EAAMI,QAASA,SAG3DuD,GAmBE,KAlBF5B,cAAA,OAAKL,UAAU,0BAAyBhB,SACtCqB,cAACyS,IAAM,CACLvL,IAAI,MACJwL,OAAO,KACPC,MAAgB,SAAT1U,EACPE,KAAe,SAATF,GAAmBsU,GACzB5S,UAAWC,IAAW,6DAADlB,EAAA,GAAAmB,YAAAnB,EAClB2T,GAAcvQ,GAA6B,WAAfA,GAAuBjC,YAAAnB,EACpD,gBAAkB2T,GAAcvQ,IAA8B,WAAfA,GAA2C,aAAfA,GAAyBpD,IACnGC,SAEFsQ,GAGCjP,cAAC2V,GAAa,CAACzG,SAAUA,EAAUvB,YAAaA,EAAatC,kBAAmBA,QAMvF1M,GACkC,IAAlCkM,IAAYvN,OAAOwV,WAClB9S,cAACyB,EAAU,CACTxD,KAAMA,EACNI,QAASA,EACT0D,WAAYA,EACZM,cAAeA,EACfP,WAAYA,EACZM,cAAeA,EACfJ,YAAaA,EACbM,eAAgBA,EAChBZ,MAAOA,EACPC,SAAUA,EACVrE,OAAQmB,EAAMnB,OACd4E,cAAeA,EACfL,UAAWpD,EAAMoD,UACjBD,SAAUA,GACVK,YAvHY,SAAA+P,GAAG,OAAI/U,EAASwC,YAAiBuS,GAAK,EAwHlD9S,aAAcA,EACdqD,gBA5HgB,SAAAyP,GAAG,OAAI/U,EAASoC,YAAmB2S,GAAK,EA6HxDlT,WAAYL,EAAMK,WAClBqD,cAAe1D,EAAM0D,cACrB0I,YAAaA,MAEb,KACJ7K,cAAA,UACEL,UAAWC,IAAW,uBAADK,OAAwBgS,GAAclQ,IAAe,iBAAmB,CAC3F,SAAyB,WAAfA,IACTpD,SAEFwS,GAAkBnR,cAAC+S,EAAe,CAAChR,WAAYA,EAAYkQ,cAAeA,QAG3C,IAAjCpH,IAAYvN,OAAO6S,UAClBnQ,cAAA,OAAKL,UAAU,gBAAehB,SAC5BqB,cAACgT,EAAW,CAAC1N,WAAY,IAAK3F,UAAU,qBAAoBhB,SAC1DqB,cAACiT,IAAM,CAACtT,UAAU,WAAWmF,MAAM,UAASnG,SAC1CqB,cAACkT,IAAO,CAAC1P,KAAM,WAInB,SApGC,IAuGX,G,UC9Me,IACb,CACEa,GAAI,OACJ4H,MAAO,OACPnF,KAAM9G,cAAC4V,KAAI,CAACpS,KAAM,KAClBoI,QAAS,SAEX,CACEvH,GAAI,aACJ4H,MAAO,cACPnF,KAAM9G,cAACqJ,IAAI,CAAC7F,KAAM,KAClBoI,QAAS,iBCSE4J,GAfU,SAAA/W,GAQvB,OACEuB,cAACsT,GAAMpT,wBAAA,CAACgP,SAAUqE,IAAgB9U,GAAK,IAAAE,SACpCF,EAAME,WAGb,ECuMekX,GAtMA,WAEb,IAAAC,EChBuB,WAEvB,IAAM7Y,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM,IAEzCuE,EAAY,SAAAkB,GAChB9F,EAAS8Y,YAAahT,GACxB,EA4BA,GAAIrF,OAAQ,CACV,IAAMsY,EAAa,KAEftY,OAAOiU,WAAaqE,GACtBnU,EAAU,YAGZnE,OAAOmI,iBAAiB,UAAU,WAC5BnI,OAAOiU,YAAcqE,GAAmC,aAArB7Y,EAAM8Y,YAA8C,aAAjB9Y,EAAMG,QAC9EuE,EAAU,YAERnE,OAAOiU,YAAcqE,GAAc7Y,EAAM8Y,aAAe9Y,EAAMG,QAChEuE,EAAU1E,EAAM8Y,WAEpB,GACF,CAEA,MAAO,CAAE3Y,OAAQH,EAAMG,OAAQuE,YAAWoU,WAAY9Y,EAAM8Y,WAAY/T,cA3ClD,SAAAa,GACpB9F,EAASiZ,YAAiBnT,GAC5B,EA0CF,CDrC+CoT,GAArC7Y,EAAMwY,EAANxY,OAAQuE,EAASiU,EAATjU,UAAWK,EAAa4T,EAAb5T,cAC3BkU,EEpBiC,WAEjC,IAAMnZ,EAAWC,cAOjB,MAAO,CAAE4B,WANK1B,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM,IAMpB+Y,iBAAkBlU,cAJvB,SAAA7D,GACpBrB,EAASqZ,YAAuBhY,GAClC,EAGF,CFUwCiY,GAA9BzX,EAAUsX,EAAVtX,WAAYqD,EAAaiU,EAAbjU,cAGdqU,EAA2B,eAAXlZ,EAA0B,mBAAqB,iBAG/DmZ,EAAU,CAAEhW,cAAayQ,kBAAgBsE,qBAuBzCkB,EAAgBpW,gBAAK,kBAAM,mDAAkC,IAG7DqW,EAAQrW,gBAAK,kBAAM,mDAA0B,IAqInD,OACEN,cAAC4W,IAAS,CAACC,SAAUC,GAA+BnY,SAClDe,eAACqX,IAAM,CAAApY,SAAA,CAELqB,cAACgX,IAAK,CACJC,OAAK,EACL7W,KAAK,IACL8W,OAAQ,WACN,OAAOlX,cAACmX,IAAQ,CAACvN,GjC/LR,SiCgMX,IAGF5J,cAACgX,IAAK,CACJC,OAAK,EACL7W,KAAK,uBACL8W,OAAQ,kBACNlX,cAACyW,EAAQhW,YAAW,CAAA9B,SAClBqB,cAAC0W,EAAa,KACM,IA9GvBU,OAAOC,KAAKZ,GAASzS,KAAI,SAAC1G,EAAQ4G,GAIvC,IAAMoT,EAAYb,EAAQnZ,GAG1Bia,EApEyB,SAAAja,GAC3B,IAAMka,EAAe,GACfC,EAAc,GAYpB,OAVItX,GACFA,EAAOuX,QAAO,SAAAC,IAERA,EAAMra,SAAWA,QAA4BoK,IAAjBiQ,EAAMra,QAAwBkZ,IAAkBlZ,KAC9Eka,EAAaxP,KAAK2P,GAClBF,EAAYzP,KAAK2P,EAAMvX,MAE3B,IAGK,CAAEoX,eAAcC,cACzB,CAqD0CG,CAAqBta,GAAnDka,EAAYD,EAAZC,aAAcC,EAAWF,EAAXE,YAQhB9J,EAAc,CAAC,EAErB,OACE3N,cAACgX,IAAK,CAAC5W,KAAMqX,EAAY9Y,SACvBqB,cAACsX,EAAS,CACRha,OAAQA,EACRuE,UAAWA,EACX/C,WAAYA,EACZ6O,YAAaA,EACbzL,cAAeA,EACfC,cAAeA,EACfkJ,kBA1FgB,KA0FqB1M,SAErCqB,cAAC+W,IAAM,CAAApY,SACJ6Y,EAAaxT,KAAI,SAAA2T,GAChB,OACE3X,cAACgX,IAAK,CAEJ5W,KAAMuX,EAAMvX,KACZ6W,OAAuB,IAAhBU,EAAMV,MACbC,OAAQ,SAAAzY,GAON,OALA2Y,OAAOS,OAAOlK,EAAWzN,wBAAA,GACpBzB,GAAK,IACR8B,KAAMoX,EAAMpX,QAIZP,cAACZ,WAAQ,CAAAT,SAGW,gBAAjBgZ,EAAMra,OACL0C,cAACZ,WAAQ,CAAAT,SACPqB,cAAC2X,EAAMtX,UAASH,YAAA,GAAKzB,MAGvBuB,cAACxB,EAAa0B,gDAAA,CACZ5C,OAAQkZ,EACR1X,WAAYA,EACZqD,cAAeA,GAGVwV,EAAM/Y,UACP,CACEA,UAAW+Y,EAAM/Y,WAEnB,CAAC,GACA+Y,EAAMpX,KACP,CACExB,UAAW4Y,EAAMpX,MAEnB,CAAC,GACAoX,EAAMhY,UACP,CACEd,aAAc8Y,EAAMhY,WAEtB,CAAC,GAAC,IAAAhB,SAGNqB,cAAC8X,WAAQ,CAACC,SAAU,KAAKpZ,SACvBqB,cAAC2X,EAAMtX,UAASH,YAAA,GAAKzB,UAMjC,GAjDKkZ,EAAMvX,KAoDjB,SAlEyB8D,EAuEnC,IA2BIlE,cAACgX,IAAK,CAAC5W,KAAK,IAAIC,UAAWsW,QAInC,EGpNeqB,UAFH,WAAH,OAAShY,cAAC6V,GAAM,GAAG,C","file":"static/js/6.f07b2a3b.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store Imports\r\nimport { handleSkin } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useSkin = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setSkin = type => {\r\n    dispatch(handleSkin(type))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (store.skin !== 'light') {\r\n      element.classList.add(classNames[store.skin])\r\n    }\r\n  }, [store.skin])\r\n\r\n  return { skin: store.skin, setSkin }\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/layout'\r\n\r\n// ** Styles\r\nimport 'animate.css/animate.css'\r\n\r\nconst LayoutWrapper = props => {\r\n  // ** Props\r\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state)\r\n\r\n  const navbarStore = store.navbar\r\n  const contentWidth = store.layout.contentWidth\r\n\r\n  //** Vars\r\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\r\n\r\n  // ** Clean Up Function\r\n  const cleanUp = () => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth('full'))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth(routeMeta.contentWidth))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\r\n      }\r\n    }\r\n    return () => cleanUp()\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className={classnames('app-content content overflow-hidden', {\r\n        [wrapperClass]: wrapperClass,\r\n        'show-overlay': navbarStore.query.length\r\n      })}\r\n    >\r\n      <div className='content-overlay'></div>\r\n      <div className='header-navbar-shadow' />\r\n      <div\r\n        className={classnames({\r\n          'content-wrapper': !appLayout,\r\n          'content-area-wrapper': appLayout,\r\n          'container-xxl p-0': contentWidth === 'boxed',\r\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\r\n        })}\r\n      >\r\n        <Tag\r\n          /*eslint-disable */\r\n          {...(layout === 'HorizontalLayout' && !appLayout\r\n            ? { className: classnames({ 'content-body': !appLayout }) }\r\n            : {})}\r\n          /*eslint-enable */\r\n        >\r\n          {children}\r\n        </Tag>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutWrapper\r\n","import { lazy } from 'react'\r\n\r\n// ** Document title\r\nconst TemplateTitle = '%s - Vuexy React Admin Template'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/home'\r\n\r\n// ** Merge Routes\r\nconst Routes = [\r\n  {\r\n    path: '/home',\r\n    component: lazy(() => import('../../views/Home'))\r\n  },\r\n  {\r\n    path: '/second-page',\r\n    component: lazy(() => import('../../views/SecondPage'))\r\n  },\r\n  {\r\n    path: '/login',\r\n    component: lazy(() => import('../../views/Login')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      authRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/error',\r\n    component: lazy(() => import('../../views/Error')),\r\n    layout: 'BlankLayout'\r\n  }\r\n]\r\n\r\nexport { DefaultRoute, TemplateTitle, Routes }\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\nconst BlankLayout = ({ children }) => {\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n\r\n  // ** Hooks\r\n  const { skin } = useSkin()\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('blank-page', {\r\n        'dark-layout': skin === 'dark'\r\n      })}\r\n    >\r\n      <div className='app-content content'>\r\n        <div className='content-wrapper'>\r\n          <div className='content-body'>{children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlankLayout\r\n","// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value)\r\n  let formatting = { month: 'short', day: 'numeric' }\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' }\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  if (userRole === 'admin') return '/'\r\n  if (userRole === 'client') return '/access-control'\r\n  return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed' // for input hover border-color\r\n  }\r\n})\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport classnames from 'classnames'\r\nimport { selectThemeColors } from '@utils'\r\nimport { Settings, X } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Reactstrap Imports\r\nimport { Input, Label } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst Customizer = props => {\r\n  // ** Props\r\n  const {\r\n    skin,\r\n    isRtl,\r\n    layout,\r\n    setSkin,\r\n    setIsRtl,\r\n    isHidden,\r\n    setLayout,\r\n    navbarType,\r\n    footerType,\r\n    transition,\r\n    navbarColor,\r\n    setIsHidden,\r\n    contentWidth,\r\n    menuCollapsed,\r\n    setLastLayout,\r\n    setTransition,\r\n    setNavbarType,\r\n    setFooterType,\r\n    setNavbarColor,\r\n    setContentWidth,\r\n    setMenuCollapsed\r\n  } = props\r\n\r\n  // ** State\r\n  const [openCustomizer, setOpenCustomizer] = useState(false)\r\n\r\n  // ** Toggles Customizer\r\n  const handleToggle = e => {\r\n    e.preventDefault()\r\n    setOpenCustomizer(!openCustomizer)\r\n  }\r\n\r\n  // ** Render Layout Skin Options\r\n  const renderSkinsRadio = () => {\r\n    const skinsArr = [\r\n      {\r\n        name: 'light',\r\n        label: 'Light',\r\n        checked: skin === 'light'\r\n      },\r\n      {\r\n        name: 'bordered',\r\n        label: 'Bordered',\r\n        checked: skin === 'bordered'\r\n      },\r\n      {\r\n        name: 'dark',\r\n        label: 'Dark',\r\n        checked: skin === 'dark'\r\n      },\r\n      {\r\n        name: 'semi-dark',\r\n        label: 'Semi Dark',\r\n        checked: skin === 'semi-dark'\r\n      }\r\n    ]\r\n\r\n    return skinsArr.map((radio, index) => {\r\n      const marginCondition = index !== skinsArr.length - 1\r\n\r\n      if (layout === 'HorizontalLayout' && radio.name === 'semi-dark') {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\r\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setSkin(radio.name)} />\r\n          <Label className='form-check-label' for={radio.name}>\r\n            {radio.label}\r\n          </Label>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Render Navbar Colors Options\r\n  const renderNavbarColors = () => {\r\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\r\n\r\n    return colorsArr.map(color => (\r\n      <li\r\n        key={color}\r\n        className={classnames(`color-box bg-${color}`, {\r\n          selected: navbarColor === color,\r\n          border: color === 'white'\r\n        })}\r\n        onClick={() => setNavbarColor(color)}\r\n      ></li>\r\n    ))\r\n  }\r\n\r\n  // ** Render Navbar Type Options\r\n  const renderNavbarTypeRadio = () => {\r\n    const navbarTypeArr = [\r\n      {\r\n        name: 'floating',\r\n        label: 'Floating',\r\n        checked: navbarType === 'floating'\r\n      },\r\n      {\r\n        name: 'sticky',\r\n        label: 'Sticky',\r\n        checked: navbarType === 'sticky'\r\n      },\r\n      {\r\n        name: 'static',\r\n        label: 'Static',\r\n        checked: navbarType === 'static'\r\n      },\r\n      {\r\n        name: 'hidden',\r\n        label: 'Hidden',\r\n        checked: navbarType === 'hidden'\r\n      }\r\n    ]\r\n\r\n    return navbarTypeArr.map((radio, index) => {\r\n      const marginCondition = index !== navbarTypeArr.length - 1\r\n\r\n      if (layout === 'HorizontalLayout' && radio.name === 'hidden') {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\r\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setNavbarType(radio.name)} />\r\n          <Label className='form-check-label' for={radio.name}>\r\n            {radio.label}\r\n          </Label>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Render Footer Type Options\r\n  const renderFooterTypeRadio = () => {\r\n    const footerTypeArr = [\r\n      {\r\n        name: 'sticky',\r\n        label: 'Sticky',\r\n        checked: footerType === 'sticky'\r\n      },\r\n      {\r\n        name: 'static',\r\n        label: 'Static',\r\n        checked: footerType === 'static'\r\n      },\r\n      {\r\n        name: 'hidden',\r\n        label: 'Hidden',\r\n        checked: footerType === 'hidden'\r\n      }\r\n    ]\r\n\r\n    return footerTypeArr.map((radio, index) => {\r\n      const marginCondition = index !== footerTypeArr.length - 1\r\n\r\n      return (\r\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\r\n          <Input\r\n            type='radio'\r\n            checked={radio.checked}\r\n            id={`footer-${radio.name}`}\r\n            onChange={() => setFooterType(radio.name)}\r\n          />\r\n          <Label className='form-check-label' for={`footer-${radio.name}`}>\r\n            {radio.label}\r\n          </Label>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  // **  Router Transition Options\r\n  const transitionOptions = [\r\n    { value: 'fadeIn', label: 'Fade' },\r\n    { value: 'fadeInLeft', label: 'Fade In Left' },\r\n    { value: 'zoomIn', label: 'Zoom In' },\r\n    { value: 'none', label: 'None' }\r\n  ]\r\n\r\n  // ** Get Current Transition\r\n  const transitionValue = transitionOptions.find(i => i.value === transition)\r\n\r\n  return (\r\n    <div\r\n      className={classnames('customizer d-none d-md-block', {\r\n        open: openCustomizer\r\n      })}\r\n    >\r\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\r\n        <Settings size={14} className='spinner' />\r\n      </a>\r\n      <PerfectScrollbar className='customizer-content' options={{ wheelPropagation: false }}>\r\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\r\n          <h4 className='mb-0'>Theme Customizer</h4>\r\n          <p className='m-0'>Customize & Preview in Real Time</p>\r\n          <a href='/' className='customizer-close' onClick={handleToggle}>\r\n            <X />\r\n          </a>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <div className='mb-2'>\r\n            <p className='fw-bold'>Skin</p>\r\n            <div className='d-flex'>{renderSkinsRadio()}</div>\r\n          </div>\r\n\r\n          <div className='mb-2'>\r\n            <p className='fw-bold'>Content Width</p>\r\n            <div className='d-flex'>\r\n              <div className='form-check me-1'>\r\n                <Input\r\n                  type='radio'\r\n                  id='full-width'\r\n                  checked={contentWidth === 'full'}\r\n                  onChange={() => setContentWidth('full')}\r\n                />\r\n                <Label className='form-check-label' for='full-width'>\r\n                  Full Width\r\n                </Label>\r\n              </div>\r\n              <div className='form-check'>\r\n                <Input\r\n                  id='boxed'\r\n                  type='radio'\r\n                  checked={contentWidth === 'boxed'}\r\n                  onChange={() => setContentWidth('boxed')}\r\n                />\r\n                <Label className='form-check-label' for='boxed'>\r\n                  Boxed\r\n                </Label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-switch mb-2 ps-0'>\r\n            <div className='d-flex'>\r\n              <p className='fw-bold me-auto mb-0'>RTL</p>\r\n              <Input type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mb-2'>\r\n            <div className='d-flex justify-content-between align-items-center'>\r\n              <p className='fw-bold mb-0'>Router Transition</p>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                defaultValue={transitionOptions[0]}\r\n                value={transitionValue}\r\n                options={transitionOptions}\r\n                isClearable={false}\r\n                onChange={({ value }) => setTransition(value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <p className='fw-bold'>Menu Layout</p>\r\n          <div className='mb-2'>\r\n            <div className='d-flex align-items-center'>\r\n              <div className='form-check me-1'>\r\n                <Input\r\n                  type='radio'\r\n                  id='vertical-layout'\r\n                  checked={layout === 'VerticalLayout'}\r\n                  onChange={() => {\r\n                    setLayout('vertical')\r\n                    setLastLayout('vertical')\r\n                  }}\r\n                />\r\n                <Label className='form-check-label' for='vertical-layout'>\r\n                  Vertical\r\n                </Label>\r\n              </div>\r\n              <div className='form-check'>\r\n                <Input\r\n                  type='radio'\r\n                  id='horizontal-layout'\r\n                  checked={layout === 'HorizontalLayout'}\r\n                  onChange={() => {\r\n                    setLayout('horizontal')\r\n                    setLastLayout('horizontal')\r\n                  }}\r\n                />\r\n                <Label className='form-check-label' for='horizontal-layout'>\r\n                  Horizontal\r\n                </Label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {layout !== 'HorizontalLayout' ? (\r\n            <div className='form-switch mb-2 ps-0'>\r\n              <div className='d-flex align-items-center'>\r\n                <p className='fw-bold me-auto mb-0'>Menu Collapsed</p>\r\n                <Input\r\n                  type='switch'\r\n                  id='menu-collapsed'\r\n                  name='menu-collapsed'\r\n                  checked={menuCollapsed}\r\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className='form-switch mb-2 ps-0'>\r\n            <div className='d-flex align-items-center'>\r\n              <p className='fw-bold me-auto mb-0'>Menu Hidden</p>\r\n              <Input\r\n                type='switch'\r\n                id='menu-hidden'\r\n                name='menu-hidden'\r\n                checked={isHidden}\r\n                onChange={() => setIsHidden(!isHidden)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          {layout !== 'HorizontalLayout' ? (\r\n            <div className='mb-2'>\r\n              <p className='fw-bold'>Navbar Color</p>\r\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className='mb-2'>\r\n            <p className='fw-bold'>{layout === 'HorizontalLayout' ? 'Menu' : 'Navbar'} Type</p>\r\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <div className='mb-2'>\r\n            <p className='fw-bold'>Footer Type</p>\r\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\r\n          </div>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Customizer\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n\r\nconst ScrollTop = props => {\r\n  // ** Props\r\n  const { showOffset, scrollBehaviour, children, ...rest } = props\r\n\r\n  // ** State\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (window) {\r\n      window.addEventListener('scroll', () => {\r\n        if (window.pageYOffset >= showOffset) {\r\n          setVisible(true)\r\n        } else {\r\n          setVisible(false)\r\n        }\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const handleScrollToTop = () => {\r\n    window.scroll({ top: 0, behavior: scrollBehaviour })\r\n  }\r\n\r\n  return (\r\n    visible && (\r\n      <div className='scroll-to-top' onClick={handleScrollToTop} {...rest}>\r\n        {children}\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default ScrollTop\r\n\r\n// ** PropTypes\r\nScrollTop.propTypes = {\r\n  showOffset: Proptypes.number,\r\n  children: Proptypes.any.isRequired,\r\n  scrollBehaviour: Proptypes.oneOf(['smooth', 'instant', 'auto'])\r\n}\r\n\r\nScrollTop.defaultProps = {\r\n  scrollBehaviour: 'smooth'\r\n}\r\n","// ** Icons Import\r\nimport { Heart } from 'react-feather'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <p className='clearfix mb-0'>\r\n      <span className='float-md-start d-block d-md-inline-block mt-25'>\r\n        COPYRIGHT © {new Date().getFullYear()}{' '}\r\n        <a href='https://1.envato.market/pixinvent_portfolio' target='_blank' rel='noopener noreferrer'>\r\n          Pixinvent\r\n        </a>\r\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\r\n      </span>\r\n      <span className='float-md-end d-none d-md-block'>\r\n        Hand-crafted & Made with\r\n        <Heart size={14} />\r\n      </span>\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","// ** React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    img,\r\n    size,\r\n    icon,\r\n    color,\r\n    status,\r\n    badgeUp,\r\n    content,\r\n    tag: Tag,\r\n    initials,\r\n    imgWidth,\r\n    className,\r\n    badgeText,\r\n    imgHeight,\r\n    badgeColor,\r\n    imgClassName,\r\n    contentStyles,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** Function to extract initials from content\r\n  const getInitials = str => {\r\n    const results = []\r\n    const wordArray = str.split(' ')\r\n    wordArray.forEach(e => {\r\n      results.push(e[0])\r\n    })\r\n    return results.join('')\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar', {\r\n        [className]: className,\r\n        [`bg-${color}`]: color,\r\n        [`avatar-${size}`]: size\r\n      })}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {img === false || img === undefined ? (\r\n        <span\r\n          className={classnames('avatar-content', {\r\n            'position-relative': badgeUp\r\n          })}\r\n          style={contentStyles}\r\n        >\r\n          {initials ? getInitials(content) : content}\r\n\r\n          {icon ? icon : null}\r\n          {badgeUp ? (\r\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\r\n              {badgeText ? badgeText : '0'}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n      ) : (\r\n        <img\r\n          className={classnames({\r\n            [imgClassName]: imgClassName\r\n          })}\r\n          src={img}\r\n          alt='avatarImg'\r\n          height={imgHeight && !size ? imgHeight : 32}\r\n          width={imgWidth && !size ? imgWidth : 32}\r\n        />\r\n      )}\r\n      {status ? (\r\n        <span\r\n          className={classnames({\r\n            [`avatar-status-${status}`]: status,\r\n            [`avatar-status-${size}`]: size\r\n          })}\r\n        ></span>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n})\r\n\r\nexport default Avatar\r\n\r\n// ** PropTypes\r\nAvatar.propTypes = {\r\n  icon: Proptypes.node,\r\n  src: Proptypes.string,\r\n  badgeUp: Proptypes.bool,\r\n  content: Proptypes.string,\r\n  badgeText: Proptypes.string,\r\n  className: Proptypes.string,\r\n  imgClassName: Proptypes.string,\r\n  contentStyles: Proptypes.object,\r\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\r\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\r\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  badgeColor: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  color: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  initials(props) {\r\n    if (props['initials'] && props['content'] === undefined) {\r\n      return new Error('content prop is required with initials prop.')\r\n    }\r\n    if (props['initials'] && typeof props['content'] !== 'string') {\r\n      return new Error('content prop must be a string.')\r\n    }\r\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\r\n      return new Error('initials must be a boolean!')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nAvatar.defaultProps = {\r\n  tag: 'div'\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar-s-11.1d46cc62.jpg\";","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\n// import { isUserLoggedIn } from '@utils'\n\n// ** Third Party Components\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\n\n// ** Default Avatar Image\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\nconst UserDropdown = () => {\n  // ** State\n  const [userData] = useState(null)\n\n  //** ComponentDidMount\n  // useEffect(() => {\n  //   if (isUserLoggedIn() !== null) {\n  //     setUserData(JSON.parse(localStorage.getItem('userData')))\n  //   }\n  // }, [])\n\n  //** Vars\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\n\n  return (\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\n        <div className='user-nav d-sm-flex d-none'>\n          <span className='user-name fw-bold'>{(userData && userData['username']) || 'John Doe'}</span>\n          <span className='user-status'>{(userData && userData.role) || 'Admin'}</span>\n        </div>\n        <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' />\n      </DropdownToggle>\n      <DropdownMenu end>\n        <DropdownItem tag='a' href='/pages/profile' onClick={e => e.preventDefault()}>\n          <User size={14} className='me-75' />\n          <span className='align-middle'>Profile</span>\n        </DropdownItem>\n        <DropdownItem tag='a' href='/apps/email' onClick={e => e.preventDefault()}>\n          <Mail size={14} className='me-75' />\n          <span className='align-middle'>Inbox</span>\n        </DropdownItem>\n        <DropdownItem tag='a' href='/apps/todo' onClick={e => e.preventDefault()}>\n          <CheckSquare size={14} className='me-75' />\n          <span className='align-middle'>Tasks</span>\n        </DropdownItem>\n        <DropdownItem tag='a' href='/apps/chat' onClick={e => e.preventDefault()}>\n          <MessageSquare size={14} className='me-75' />\n          <span className='align-middle'>Chats</span>\n        </DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem tag='a' href='/pages/account-settings' onClick={e => e.preventDefault()}>\n          <Settings size={14} className='me-75' />\n          <span className='align-middle'>Settings</span>\n        </DropdownItem>\n        <DropdownItem tag='a' href='/pages/pricing' onClick={e => e.preventDefault()}>\n          <CreditCard size={14} className='me-75' />\n          <span className='align-middle'>Pricing</span>\n        </DropdownItem>\n        <DropdownItem tag='a' href='/pages/faq' onClick={e => e.preventDefault()}>\n          <HelpCircle size={14} className='me-75' />\n          <span className='align-middle'>FAQ</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/login'>\n          <Power size={14} className='me-75' />\n          <span className='align-middle'>Logout</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default UserDropdown\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Dropdowns Imports\nimport UserDropdown from './UserDropdown'\n\n// ** Third Party Components\nimport { Sun, Moon } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { NavItem, NavLink } from 'reactstrap'\n\nconst NavbarUser = props => {\n  // ** Props\n  const { skin, setSkin } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === 'dark') {\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\n    } else {\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='bookmark-wrapper d-flex align-items-center'>\n        <NavItem className='d-none d-lg-block'>\n          <NavLink className='nav-link-style'>\n            <ThemeToggler />\n          </NavLink>\n        </NavItem>\n      </div>\n      <ul className='nav navbar-nav align-items-center ms-auto'>\n        <UserDropdown />\n      </ul>\n    </Fragment>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport NavbarUser from './NavbarUser'\n\n// ** Third Party Components\nimport { Menu } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { NavItem, NavLink } from 'reactstrap'\n\nconst ThemeNavbar = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  return (\n    <Fragment>\n      <ul className='navbar-nav d-xl-none'>\n        <NavItem className='mobile-menu me-auto d-flex align-items-center'>\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\n            <Menu className='ficon' />\n          </NavLink>\n        </NavItem>\n      </ul>\n      <NavbarUser skin={skin} setSkin={setSkin} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Icons Imports\r\nimport { Disc, X, Circle } from 'react-feather'\r\n\r\n// ** Config\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nconst VerticalMenuHeader = props => {\r\n  // ** Props\r\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\r\n\r\n  // ** Reset open group\r\n  useEffect(() => {\r\n    if (!menuHover && menuCollapsed) setGroupOpen([])\r\n  }, [menuHover, menuCollapsed])\r\n\r\n  // ** Menu toggler component\r\n  const Toggler = () => {\r\n    if (!menuCollapsed) {\r\n      return (\r\n        <Disc\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(true)}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <Circle\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-header'>\r\n      <ul className='nav navbar-nav flex-row'>\r\n        <li className='nav-item me-auto'>\r\n          <NavLink to='/' className='navbar-brand'>\r\n            <span className='brand-logo'>\r\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\r\n            </span>\r\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\r\n          </NavLink>\r\n        </li>\r\n        <li className='nav-item nav-toggle'>\r\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\r\n            <Toggler />\r\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalMenuHeader\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst VerticalNavMenuLink = ({\r\n  item,\r\n  activeItem,\r\n  setActiveItem,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** Hooks\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames({\r\n        'nav-item': !item.children,\r\n        disabled: item.disabled,\r\n        active: item.navLink === activeItem\r\n      })}\r\n    >\r\n      <LinkTag\r\n        className='d-flex align-items-center'\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: match => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (\r\n                  match.url &&\r\n                  match.url !== '' &&\r\n                  match.url === item.navLink\r\n                ) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n      >\r\n        {item.icon}\r\n        <span className='menu-item text-truncate'>{item.title}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ms-auto me-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuLink\r\n","// ** Imports createContext function\r\nimport { createContext } from 'react'\r\n\r\n// ** Imports createContextualCan function\r\nimport { createContextualCan } from '@casl/react'\r\n\r\n// ** Create Context\r\nexport const AbilityContext = createContext()\r\n\r\n// ** Init Can Context\r\nexport const Can = createContextualCan(AbilityContext.Consumer)\r\n","// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveVerticalNavMenuItemComponent = item => {\r\n  if (item.header) return 'VerticalNavMenuSectionHeader'\r\n  if (item.children) return 'VerticalNavMenuGroup'\r\n  return 'VerticalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveHorizontalNavMenuItemComponent = item => {\r\n  if (item.children) return 'HorizontalNavMenuGroup'\r\n  return 'HorizontalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Check if nav-link is active\r\n * @param {Object} link nav-link object\r\n */\r\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\r\n  return (\r\n    currentURL === link ||\r\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\r\n  )\r\n  // return currentURL === link\r\n}\r\n\r\n/**\r\n * Check if the given item has the given url\r\n * in one of its children\r\n *\r\n * @param item\r\n * @param activeItem\r\n */\r\nexport const hasActiveChild = (item, currentUrl) => {\r\n  const { children } = item\r\n\r\n  if (!children) {\r\n    return false\r\n  }\r\n\r\n  for (const child of children) {\r\n    if (child.children) {\r\n      if (hasActiveChild(child, currentUrl)) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    // Check if the child has a link and is active\r\n    if (child && child.navLink && currentUrl && (child.navLink === currentUrl || currentUrl.includes(child.navLink))) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Check if this is a children\r\n * of the given item\r\n *\r\n * @param children\r\n * @param openGroup\r\n * @param currentActiveGroup\r\n */\r\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\r\n  children.forEach(child => {\r\n    if (!currentActiveGroup.includes(child.id)) {\r\n      const index = openGroup.indexOf(child.id)\r\n      if (index > -1) openGroup.splice(index, 1)\r\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup)\r\n    }\r\n  })\r\n}\r\n\r\nexport const canViewMenuGroup = item => {\r\n  const ability = useContext(AbilityContext)\r\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\r\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\r\n\r\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\r\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\r\n  if (!(item.action && item.resource)) {\r\n    return hasAnyVisibleChild\r\n  }\r\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\r\n}\r\n\r\nexport const canViewMenuItem = item => {\r\n  const ability = useContext(AbilityContext)\r\n  console.log('AbilityContext :>> ', AbilityContext)\r\n  return ability.can(item.action, item.resource)\r\n}\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Collapse, Badge } from 'reactstrap'\r\n\r\n// ** Vertical Menu Items Component\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\n// ** Utils\r\nimport { hasActiveChild, removeChildren } from '@layouts/utils'\r\n\r\nconst VerticalNavMenuGroup = ({\r\n  item,\r\n  groupOpen,\r\n  menuHover,\r\n  activeItem,\r\n  parentItem,\r\n  routerProps,\r\n  groupActive,\r\n  currentActiveGroup,\r\n  setGroupOpen,\r\n  setActiveItem,\r\n  menuCollapsed,\r\n  setGroupActive,\r\n  setCurrentActiveGroup,\r\n  currentActiveItem,\r\n  ...rest\r\n}) => {\r\n  // ** Hooks\r\n  const location = useLocation()\r\n\r\n  // ** Current Val\r\n  const currentURL = useLocation().pathname\r\n\r\n  // ** Toggle Open Group\r\n  const toggleOpenGroup = (item, parent) => {\r\n    let openGroup = groupOpen\r\n    const activeGroup = groupActive\r\n\r\n    // ** If Group is already open and clicked, close the group\r\n    if (openGroup.includes(item.id)) {\r\n      openGroup.splice(openGroup.indexOf(item.id), 1)\r\n\r\n      // ** If clicked Group has open group children, Also remove those children to close those groups\r\n      if (item.children) {\r\n        removeChildren(item.children, openGroup, groupActive)\r\n      }\r\n    } else if (\r\n      activeGroup.includes(item.id) ||\r\n      currentActiveGroup.includes(item.id)\r\n    ) {\r\n      // ** If Group clicked is Active Group\r\n\r\n      // ** If Active group is closed and clicked again, we should open active group else close active group\r\n      if (\r\n        !activeGroup.includes(item.id) &&\r\n        currentActiveGroup.includes(item.id)\r\n      ) {\r\n        activeGroup.push(item.id)\r\n      } else {\r\n        activeGroup.splice(activeGroup.indexOf(item.id), 1)\r\n      }\r\n\r\n      // ** Update Active Group\r\n      setGroupActive([...activeGroup])\r\n    } else if (parent) {\r\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\r\n      if (parent.children) {\r\n        removeChildren(parent.children, openGroup, groupActive)\r\n      }\r\n\r\n      // ** After removing all the open groups under that parent, add the clicked group to open group array\r\n      if (!openGroup.includes(item.id)) {\r\n        openGroup.push(item.id)\r\n      }\r\n    } else {\r\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\r\n\r\n      // ** Empty Open Group array\r\n      openGroup = []\r\n\r\n      // ** Push current clicked group item to Open Group array\r\n      if (!openGroup.includes(item.id)) {\r\n        openGroup.push(item.id)\r\n      }\r\n    }\r\n    setGroupOpen([...openGroup])\r\n  }\r\n\r\n  // ** On Group Item Click\r\n  const onCollapseClick = (e, item) => {\r\n    toggleOpenGroup(item, parentItem)\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  // ** Checks url & updates active item\r\n  useEffect(() => {\r\n    if (hasActiveChild(item, currentURL)) {\r\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\r\n    } else {\r\n      const index = groupActive.indexOf(item.id)\r\n      if (index > -1) groupActive.splice(index, 1)\r\n    }\r\n    setGroupActive([...groupActive])\r\n    setCurrentActiveGroup([...groupActive])\r\n    setGroupOpen([])\r\n  }, [location])\r\n\r\n  // ** Returns condition to add open class\r\n  const openClassCondition = id => {\r\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\r\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\r\n        return true\r\n      }\r\n    } else if (\r\n      groupActive.includes(id) &&\r\n      menuCollapsed &&\r\n      menuHover === false\r\n    ) {\r\n      return false\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item has-sub', {\r\n        open: openClassCondition(item.id),\r\n        'menu-collapsed-open': groupActive.includes(item.id),\r\n        'sidebar-group-active':\r\n          groupActive.includes(item.id) ||\r\n          groupOpen.includes(item.id) ||\r\n          currentActiveGroup.includes(item.id)\r\n      })}\r\n    >\r\n      <Link\r\n        className='d-flex align-items-center'\r\n        to='/'\r\n        onClick={e => onCollapseClick(e, item)}\r\n      >\r\n        {item.icon}\r\n        <span className='menu-title text-truncate'>{item.title}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ms-auto me-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </Link>\r\n\r\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\r\n      <ul className='menu-content'>\r\n        <Collapse\r\n          isOpen={\r\n            (groupActive && groupActive.includes(item.id)) ||\r\n            (groupOpen && groupOpen.includes(item.id))\r\n          }\r\n        >\r\n          <VerticalNavMenuItems\r\n            {...rest}\r\n            items={item.children}\r\n            groupActive={groupActive}\r\n            setGroupActive={setGroupActive}\r\n            currentActiveGroup={currentActiveGroup}\r\n            setCurrentActiveGroup={setCurrentActiveGroup}\r\n            groupOpen={groupOpen}\r\n            setGroupOpen={setGroupOpen}\r\n            parentItem={item}\r\n            menuCollapsed={menuCollapsed}\r\n            menuHover={menuHover}\r\n            routerProps={routerProps}\r\n            currentActiveItem={currentActiveItem}\r\n            activeItem={activeItem}\r\n            setActiveItem={setActiveItem}\r\n          />\r\n        </Collapse>\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuGroup\r\n","// ** Third Party Components\r\nimport { MoreHorizontal } from 'react-feather'\r\n\r\nconst VerticalNavMenuSectionHeader = ({ item }) => {\r\n  return (\r\n    <li className='navigation-header'>\r\n      <span>{item.header}</span>\r\n      <MoreHorizontal className='feather-more-horizontal' />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuSectionHeader\r\n","// ** Vertical Menu Components\r\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\r\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\r\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\r\n\r\n// ** Utils\r\nimport {\r\n  // canViewMenuItem,\r\n  // canViewMenuGroup,\r\n  resolveVerticalNavMenuItemComponent as resolveNavItemComponent\r\n} from '@layouts/utils'\r\n\r\nconst VerticalMenuNavItems = props => {\r\n  // ** Components Object\r\n  const Components = {\r\n    VerticalNavMenuLink,\r\n    VerticalNavMenuGroup,\r\n    VerticalNavMenuSectionHeader\r\n  }\r\n\r\n  // ** Render Nav Menu Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n    if (item.children) {\r\n      return <TagName item={item} index={index} key={item.id} {...props} />\r\n    }\r\n    return <TagName key={item.id || item.header} item={item} {...props} />\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default VerticalMenuNavItems\r\n","// ** React Imports\r\nimport { Fragment, useState, useRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Vertical Menu Components\r\nimport VerticalMenuHeader from './VerticalMenuHeader'\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin, menuData } = props\r\n\r\n  // ** States\r\n  const [groupOpen, setGroupOpen] = useState([])\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [currentActiveGroup, setCurrentActiveGroup] = useState([])\r\n  const [activeItem, setActiveItem] = useState(null)\r\n\r\n  // ** Menu Hover State\r\n  const [menuHover, setMenuHover] = useState(false)\r\n\r\n  // ** Ref\r\n  const shadowRef = useRef(null)\r\n\r\n  // ** Function to handle Mouse Enter\r\n  const onMouseEnter = () => {\r\n    setMenuHover(true)\r\n  }\r\n\r\n  // ** Scroll Menu\r\n  const scrollMenu = container => {\r\n    if (shadowRef && container.scrollTop > 0) {\r\n      if (!shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.add('d-block')\r\n      }\r\n    } else {\r\n      if (shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.remove('d-block')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\r\n          expanded: menuHover || menuCollapsed === false,\r\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\r\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\r\n        })}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={() => setMenuHover(false)}\r\n      >\r\n        {menu ? (\r\n          menu\r\n        ) : (\r\n          <Fragment>\r\n            {/* Vertical Menu Header */}\r\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\r\n            {/* Vertical Menu Header Shadow */}\r\n            <div className='shadow-bottom' ref={shadowRef}></div>\r\n            {/* Perfect Scrollbar */}\r\n            <PerfectScrollbar\r\n              className='main-menu-content'\r\n              options={{ wheelPropagation: false }}\r\n              onScrollY={container => scrollMenu(container)}\r\n            >\r\n              <ul className='navigation navigation-main'>\r\n                <VerticalNavMenuItems\r\n                  items={menuData}\r\n                  menuData={menuData}\r\n                  menuHover={menuHover}\r\n                  groupOpen={groupOpen}\r\n                  activeItem={activeItem}\r\n                  groupActive={groupActive}\r\n                  currentActiveGroup={currentActiveGroup}\r\n                  routerProps={routerProps}\r\n                  setGroupOpen={setGroupOpen}\r\n                  menuCollapsed={menuCollapsed}\r\n                  setActiveItem={setActiveItem}\r\n                  setGroupActive={setGroupActive}\r\n                  setCurrentActiveGroup={setCurrentActiveGroup}\r\n                  currentActiveItem={currentActiveItem}\r\n                />\r\n              </ul>\r\n            </PerfectScrollbar>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    dispatch(handleRTL(value))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n","// ** Store Imports\r\nimport { handleNavbarType } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useNavbarType = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setNavbarType = type => {\r\n    dispatch(handleNavbarType(type))\r\n  }\r\n\r\n  return { navbarType: store.navbarType, setNavbarType }\r\n}\r\n","// ** Store Imports\r\nimport { handleFooterType } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useFooterType = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setFooterType = type => {\r\n    dispatch(handleFooterType(type))\r\n  }\r\n\r\n  return {\r\n    setFooterType,\r\n    footerType: store.footerType\r\n  }\r\n}\r\n","// ** Store Imports\r\nimport { handleNavbarColor } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useNavbarColor = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setNavbarColor = value => {\r\n    dispatch(handleNavbarColor(value))\r\n  }\r\n\r\n  return { navbarColor: store.navbarColor, setNavbarColor }\r\n}\r\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Navbar, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport ScrollToTop from '@components/scrolltop'\nimport FooterComponent from './components/footer'\nimport NavbarComponent from './components/navbar'\nimport SidebarComponent from './components/menu/vertical-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\n\nconst VerticalLayout = props => {\n  // ** Props\n  const { menu, navbar, footer, menuData, children, routerProps, setLastLayout, currentActiveItem } = props\n\n  // ** Hooks\n  const [isRtl, setIsRtl] = useRTL()\n  const { skin, setSkin } = useSkin()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n  const isHidden = layoutStore.menuHidden\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  }\n\n  const navbarClasses = {\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        }`,\n        {\n          // Modern Menu\n          'vertical-menu-modern': windowWidth >= 1200,\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          'vertical-overlay-menu': windowWidth < 1200,\n          'menu-hide': !menuVisibility && windowWidth < 1200,\n          'menu-open': menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuData={menuData}\n          routerProps={routerProps}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n          currentActiveItem={currentActiveItem}\n        />\n      ) : null}\n\n      <Navbar\n        expand='lg'\n        container={false}\n        light={skin !== 'dark'}\n        dark={skin === 'dark' || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\n        )}\n      >\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar : <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames('sidenav-overlay', {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          setLastLayout={setLastLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          menuCollapsed={menuCollapsed}\n          setMenuCollapsed={setMenuCollapsed}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","import { Mail, Home, Clock, Eye, Columns } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'home',\r\n    title: 'Реальное время',\r\n    icon: <Eye size={20} />,\r\n    navLink: '/home'\r\n  },\r\n  {\r\n    id: 'secondPage',\r\n    title: 'Рабочая смена',\r\n    icon: <Clock size={20} />,\r\n    navLink: '/second-page'\r\n  },\r\n  {\r\n    id: 'secondPage',\r\n    title: 'Простои',\r\n    icon: <Columns size={20} />,\r\n    navLink: '/error'\r\n  }\r\n]\r\n","// ** Core Layout Import\r\n// !Do not remove the Layout import\r\nimport Layout from '@layouts/VerticalLayout'\r\n\r\n// ** Menu Items Array\r\nimport navigation from '@src/navigation/vertical'\r\n\r\nconst VerticalLayout = props => {\r\n  // const [menuData, setMenuData] = useState([])\r\n\r\n  // ** For ServerSide navigation\r\n  // useEffect(() => {\r\n  //   axios.get(URL).then(response => setMenuData(response.data))\r\n  // }, [])\r\n\r\n  return (\r\n    <Layout menuData={navigation} {...props}>\r\n      {props.children}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default VerticalLayout\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\nconst HorizontalNavMenuLink = ({\r\n  item,\r\n  isChild,\r\n  activeItem,\r\n  setActiveItem,\r\n  setOpenDropdown,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** Remove all items from OpenDropdown array\r\n  const resetOpenDropdowns = () => setOpenDropdown([])\r\n\r\n  // ** On mount update active group array\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n    }\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item', {\r\n        active: item.navLink === activeItem,\r\n        disabled: item.disabled\r\n      })}\r\n      onClick={resetOpenDropdowns}\r\n    >\r\n      <LinkTag\r\n        className={classnames('d-flex align-items-center', {\r\n          'dropdown-item': isChild,\r\n          'nav-link': !isChild\r\n        })}\r\n        tag={LinkTag}\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: (match, location) => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (\r\n                  match.url &&\r\n                  match.url !== '' &&\r\n                  match.url === item.navLink\r\n                ) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        /*eslint-enable */\r\n      >\r\n        {item.icon}\r\n        <span>{item.title}</span>\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuLink\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { hasActiveChild } from '@layouts/utils'\r\n\r\n// ** Horizontal Menu Items Component\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst HorizontalNavMenuGroup = props => {\r\n  // ** Props\r\n  const {\r\n    item,\r\n    submenu,\r\n    activeItem,\r\n    routerProps,\r\n    groupActive,\r\n    onMouseEnter,\r\n    onMouseLeave,\r\n    openDropdown,\r\n    setActiveItem,\r\n    setGroupActive,\r\n    setOpenDropdown,\r\n    currentActiveItem\r\n  } = props\r\n\r\n  // ** Hooks\r\n  const location = useLocation()\r\n\r\n  // ** URL Var\r\n  const currentURL = useLocation().pathname\r\n\r\n  useEffect(() => {\r\n    if (hasActiveChild(item, currentURL)) {\r\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\r\n    } else {\r\n      const index = groupActive.indexOf(item.id)\r\n      if (index > -1) groupActive.splice(index, 1)\r\n    }\r\n    setGroupActive([...groupActive])\r\n  }, [location])\r\n\r\n  // ** Dropdown menu modifiers\r\n  const menuModifiers = [\r\n    {\r\n      enabled: true,\r\n      phase: 'write',\r\n      name: 'setMaxHeight',\r\n      fn: data => {\r\n        const pageHeight = window.innerHeight,\r\n          popperEl = data.state.elements.popper,\r\n          ddTop = popperEl.getBoundingClientRect().top,\r\n          ddHeight = popperEl.clientHeight\r\n\r\n        let maxHeight, stylesObj\r\n\r\n        // ** Calculate and set height\r\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\r\n          maxHeight = pageHeight - ddTop - 25\r\n          stylesObj = {\r\n            maxHeight,\r\n            overflowY: 'auto'\r\n          }\r\n        }\r\n\r\n        const ddRef = popperEl.getBoundingClientRect()\r\n\r\n        // ** If there is not space left to open sub menu open it to the right\r\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\r\n          popperEl.closest('.dropdown').classList.add('openLeft')\r\n        }\r\n\r\n        data.state.styles.popper = { ...data.state.styles.popper, ...stylesObj }\r\n      }\r\n    }\r\n  ]\r\n  return (\r\n    <Dropdown\r\n      tag='li'\r\n      toggle={() => null}\r\n      className={classnames({\r\n        'nav-item': submenu === false,\r\n        'dropdown-submenu': submenu === true,\r\n        'sidebar-group-active active': groupActive.includes(item.id)\r\n      })}\r\n      isOpen={openDropdown.includes(item.id)}\r\n      onMouseEnter={() => onMouseEnter(item.id)}\r\n      onMouseLeave={() => onMouseLeave(item.id)}\r\n    >\r\n      <DropdownToggle\r\n        to='/'\r\n        tag={Link}\r\n        onClick={e => e.preventDefault()}\r\n        className={classnames('dropdown-toggle d-flex align-items-center', {\r\n          'dropdown-item': submenu === true,\r\n          'nav-link': submenu === false\r\n        })}\r\n      >\r\n        {item.icon}\r\n        <span>{item.title}</span>\r\n      </DropdownToggle>\r\n      <DropdownMenu\r\n        tag='ul'\r\n        modifiers={menuModifiers}\r\n        className={classnames({ 'first-level': submenu === false })}\r\n      >\r\n        <HorizontalNavMenuItems\r\n          submenu={true}\r\n          parentItem={item}\r\n          items={item.children}\r\n          activeItem={activeItem}\r\n          groupActive={groupActive}\r\n          routerProps={routerProps}\r\n          openDropdown={openDropdown}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          setActiveItem={setActiveItem}\r\n          setGroupActive={setGroupActive}\r\n          isChild={true}\r\n          setOpenDropdown={setOpenDropdown}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuGroup\r\n","// ** Menu Components Imports\r\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\r\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\r\nimport {\r\n  // canViewMenuGroup,\r\n  // canViewMenuItem\r\n  resolveHorizontalNavMenuItemComponent as resolveNavItemComponent\r\n} from '@layouts/utils'\r\n\r\nconst HorizontalNavMenuItems = props => {\r\n  // ** Components Object\r\n  const Components = {\r\n    HorizontalNavMenuGroup,\r\n    HorizontalNavMenuLink\r\n  }\r\n\r\n  // ** Render Nav Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n    if (item.children) {\r\n      return <TagName item={item} index={index} key={item.id} {...props} />\r\n    }\r\n    return <TagName item={item} index={index} key={item.id} {...props} />\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default HorizontalNavMenuItems\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Horizontal Menu Components\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst HorizontalMenu = ({ menuData, currentActiveItem, routerProps }) => {\r\n  // ** States\r\n  const [activeItem, setActiveItem] = useState(null)\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [openDropdown, setOpenDropdown] = useState([])\r\n\r\n  // ** On mouse enter push the ID to openDropdown array\r\n  const onMouseEnter = id => {\r\n    const arr = openDropdown\r\n    arr.push(id)\r\n    setOpenDropdown([...arr])\r\n  }\r\n\r\n  // ** On mouse leave remove the ID to openDropdown array\r\n  const onMouseLeave = id => {\r\n    const arr = openDropdown\r\n    arr.splice(arr.indexOf(id), 1)\r\n    setOpenDropdown([...arr])\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-container main-menu-content'>\r\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\r\n        <HorizontalNavMenuItems\r\n          submenu={false}\r\n          items={menuData}\r\n          activeItem={activeItem}\r\n          groupActive={groupActive}\r\n          routerProps={routerProps}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          openDropdown={openDropdown}\r\n          setActiveItem={setActiveItem}\r\n          setGroupActive={setGroupActive}\r\n          setOpenDropdown={setOpenDropdown}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HorizontalMenu\r\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuHidden, handleContentWidth } from '@store/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Navbar, NavItem, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport ScrollToTop from '@components/scrolltop'\nimport NavbarComponent from './components/navbar'\nimport FooterComponent from './components/footer'\nimport MenuComponent from './components/menu/horizontal-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\n\nconst HorizontalLayout = props => {\n  // ** Props\n  const { children, navbar, menuData, footer, menu, currentActiveItem, routerProps, setLastLayout } = props\n\n  // ** Hooks\n  const { skin, setSkin } = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener('scroll', function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static'\n  }\n\n  const navbarClasses = {\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\n    sticky: 'fixed-top'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        } menu-expanded`\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      <Navbar\n        expand='lg'\n        container={false}\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\n          'navbar-scrolled': navbarScrolled\n        })}\n      >\n        {!navbar && (\n          <div className='navbar-header d-xl-block d-none'>\n            <ul className='nav navbar-nav'>\n              <NavItem>\n                <Link to='/' className='navbar-brand'>\n                  <span className='brand-logo'>\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\n                  </span>\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar : <NavbarComponent skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className='horizontal-menu-wrapper'>\n          <Navbar\n            tag='div'\n            expand='sm'\n            light={skin !== 'dark'}\n            dark={skin === 'dark' || bgColorCondition}\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\n              [navbarClasses[navbarType]]: navbarType !== 'static',\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\n            })}\n          >\n            {menu ? (\n              menu\n            ) : (\n              <MenuComponent menuData={menuData} routerProps={routerProps} currentActiveItem={currentActiveItem} />\n            )}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLastLayout={setLastLayout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","import { Mail, Home } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'home',\r\n    title: 'Home',\r\n    icon: <Home size={20} />,\r\n    navLink: '/home'\r\n  },\r\n  {\r\n    id: 'secondPage',\r\n    title: 'Second Page',\r\n    icon: <Mail size={20} />,\r\n    navLink: '/second-page'\r\n  }\r\n]\r\n","// ** Core Layout Import\r\n// !Do not remove the Layout import\r\nimport Layout from '@layouts/HorizontalLayout'\r\n\r\n// ** Menu Items Array\r\nimport navigation from '@src/navigation/horizontal'\r\n\r\nconst HorizontalLayout = props => {\r\n  // const [menuData, setMenuData] = useState([])\r\n\r\n  // ** For ServerSide navigation\r\n  // useEffect(() => {\r\n  //   axios.get(URL).then(response => setMenuData(response.data))\r\n  // }, [])\r\n\r\n  return (\r\n    <Layout menuData={navigation} {...props}>\r\n      {props.children}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default HorizontalLayout\r\n","// ** React Imports\nimport { Suspense, lazy, Fragment } from 'react'\n\n// ** Utils\nimport { useLayout } from '@hooks/useLayout'\nimport { useRouterTransition } from '@hooks/useRouterTransition'\n\n// ** Custom Components\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\n\n// ** Router Components\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\n\n// ** Routes & Default Routes\nimport { DefaultRoute, Routes } from './routes'\n\n// ** Layouts\nimport BlankLayout from '@layouts/BlankLayout'\nimport VerticalLayout from '@src/layouts/VerticalLayout'\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\n\nconst Router = () => {\n  // ** Hooks\n  const { layout, setLayout, setLastLayout } = useLayout()\n  const { transition, setTransition } = useRouterTransition()\n\n  // ** Default Layout\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\n\n  // ** All of the available layouts\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\n\n  // ** Current Active Item\n  const currentActiveItem = null\n\n  // ** Return Filtered Array of Routes & Paths\n  const LayoutRoutesAndPaths = layout => {\n    const LayoutRoutes = []\n    const LayoutPaths = []\n\n    if (Routes) {\n      Routes.filter(route => {\n        // ** Checks if Route layout or Default layout matches current layout\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\n          LayoutRoutes.push(route)\n          LayoutPaths.push(route.path)\n        }\n      })\n    }\n\n    return { LayoutRoutes, LayoutPaths }\n  }\n\n  const NotAuthorized = lazy(() => import('@src/views/NotAuthorized'))\n\n  // ** Init Error Component\n  const Error = lazy(() => import('@src/views/Error'))\n\n  /**\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\n   */\n  // const FinalRoute = props => {\n  //   const route = props.route\n  //   let action, resource\n\n  //   // ** Assign vars based on route meta\n  //   if (route.meta) {\n  //     action = route.meta.action ? route.meta.action : null\n  //     resource = route.meta.resource ? route.meta.resource : null\n  //   }\n\n  //   if (\n  //     (!isUserLoggedIn() && route.meta === undefined) ||\n  //     (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\n  //   ) {\n  //     /**\n  //      ** If user is not Logged in & route meta is undefined\n  //      ** OR\n  //      ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\n  //      ** Then redirect user to login\n  //      */\n\n  //     return <Redirect to='/login' />\n  //   } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\n  //     // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\n  //     return <Redirect to='/' />\n  //   } else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\n  //     // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\n  //     return <Redirect to='/misc/not-authorized' />\n  //   } else {\n  //     // ** If none of the above render component\n  //     return <route.component {...props} />\n  //   }\n  // }\n\n  // ** Return Route to Render\n  const ResolveRoutes = () => {\n    return Object.keys(Layouts).map((layout, index) => {\n      // ** Convert Layout parameter to Layout Component\n      // ? Note: make sure to keep layout and component name equal\n\n      const LayoutTag = Layouts[layout]\n\n      // ** Get Routes and Paths of the Layout\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\n\n      // ** We have freedom to display different layout for different route\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\n\n      // ** RouterProps to pass them to Layouts\n      const routerProps = {}\n\n      return (\n        <Route path={LayoutPaths} key={index}>\n          <LayoutTag\n            layout={layout}\n            setLayout={setLayout}\n            transition={transition}\n            routerProps={routerProps}\n            setLastLayout={setLastLayout}\n            setTransition={setTransition}\n            currentActiveItem={currentActiveItem}\n          >\n            <Switch>\n              {LayoutRoutes.map(route => {\n                return (\n                  <Route\n                    key={route.path}\n                    path={route.path}\n                    exact={route.exact === true}\n                    render={props => {\n                      // ** Assign props to routerProps\n                      Object.assign(routerProps, {\n                        ...props,\n                        meta: route.meta\n                      })\n\n                      return (\n                        <Fragment>\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\n\n                          {route.layout === 'BlankLayout' ? (\n                            <Fragment>\n                              <route.component {...props} />\n                            </Fragment>\n                          ) : (\n                            <LayoutWrapper\n                              layout={DefaultLayout}\n                              transition={transition}\n                              setTransition={setTransition}\n                              /* Conditional props */\n                              /*eslint-disable */\n                              {...(route.appLayout\n                                ? {\n                                    appLayout: route.appLayout\n                                  }\n                                : {})}\n                              {...(route.meta\n                                ? {\n                                    routeMeta: route.meta\n                                  }\n                                : {})}\n                              {...(route.className\n                                ? {\n                                    wrapperClass: route.className\n                                  }\n                                : {})}\n                              /*eslint-enable */\n                            >\n                              <Suspense fallback={null}>\n                                <route.component {...props} />\n                              </Suspense>\n                            </LayoutWrapper>\n                          )}\n                        </Fragment>\n                      )\n                    }}\n                  />\n                )\n              })}\n            </Switch>\n          </LayoutTag>\n        </Route>\n      )\n    })\n  }\n\n  return (\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\n      <Switch>\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\n        <Route\n          exact\n          path='/'\n          render={() => {\n            return <Redirect to={DefaultRoute} />\n          }}\n        />\n        {/* Not Auth Route */}\n        <Route\n          exact\n          path='/misc/not-authorized'\n          render={() => (\n            <Layouts.BlankLayout>\n              <NotAuthorized />\n            </Layouts.BlankLayout>\n          )}\n        />\n        {ResolveRoutes()}\n\n        {/* NotFound Error page */}\n        <Route path='*' component={Error} />\n      </Switch>\n    </AppRouter>\n  )\n}\n\nexport default Router\n","//** React Imports\r\n// import { useEffect, useCallback } from 'react'\r\n\r\n// ** Store Imports\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { handleLayout, handleLastLayout } from '@store/layout'\r\n\r\nexport const useLayout = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setLayout = value => {\r\n    dispatch(handleLayout(value))\r\n  }\r\n\r\n  const setLastLayout = value => {\r\n    dispatch(handleLastLayout(value))\r\n  }\r\n\r\n  // const handleLayoutUpdate = useCallback(() => {\r\n  //   // ** If layout is horizontal & screen size is equals to or below 1200\r\n  //   if (store.layout === 'horizontal' && window.innerWidth <= 1200) {\r\n  //     setLayout('vertical')\r\n  //     setLastLayout('horizontal')\r\n  //   }\r\n  //   // ** If lastLayout is horizontal & screen size is equals to or above 1200\r\n  //   if (store.lastLayout === 'horizontal' && window.innerWidth >= 1200) {\r\n  //     setLayout('horizontal')\r\n  //   }\r\n  // }, [])\r\n\r\n  // // ** ComponentDidMount\r\n  // useEffect(() => {\r\n  //   handleLayoutUpdate()\r\n  // }, [])\r\n\r\n  // useEffect(() => {\r\n  //   // ** Window Resize Event\r\n  //   window.addEventListener('resize', handleLayoutUpdate)\r\n  // }, [store.layout, store.lastLayout])\r\n\r\n  if (window) {\r\n    const breakpoint = 1200\r\n\r\n    if (window.innerWidth < breakpoint) {\r\n      setLayout('vertical')\r\n    }\r\n\r\n    window.addEventListener('resize', () => {\r\n      if (window.innerWidth <= breakpoint && store.lastLayout !== 'vertical' && store.layout !== 'vertical') {\r\n        setLayout('vertical')\r\n      }\r\n      if (window.innerWidth >= breakpoint && store.lastLayout !== store.layout) {\r\n        setLayout(store.lastLayout)\r\n      }\r\n    })\r\n  }\r\n\r\n  return { layout: store.layout, setLayout, lastLayout: store.lastLayout, setLastLayout }\r\n}\r\n","// ** Store Imports\r\nimport { handleRouterTransition } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRouterTransition = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setTransition = type => {\r\n    dispatch(handleRouterTransition(type))\r\n  }\r\n\r\n  return { transition: store.routerTransition, setTransition }\r\n}\r\n","// ** Router Import\r\nimport Router from './router/Router'\r\n\r\nconst App = () => <Router />\r\n\r\nexport default App\r\n"],"sourceRoot":""}